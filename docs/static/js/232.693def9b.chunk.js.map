{"version":3,"file":"static/js/232.693def9b.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/EvrBalance/index.js","business-components/InstanceSpecs/index.js","components/AccordionsCollapse/index.js","business-components/Leases/Lease/index.js","business-components/Leases/index.js","common/constants.js","components/CopyBox/index.js","components/ModalDialog/index.js","components/RegularTable/index.js","pages/Host/index.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  return (\n    <StyledTooltip title={countryCode} placement='right-end'>\n      <div>\n        <ReactCountryFlag\n          className=\"emojiFlag\"\n          countryCode={countryCode}\n          style={{\n            fontSize: size,\n            cursor: 'pointer'\n          }}\n          aria-label={countryCode}\n          alt={countryCode}\n          svg\n        />\n      </div>\n    </StyledTooltip>\n  );\n}\n","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Tooltip\n} from '@material-ui/core';\n\nimport Loader from '../../components/Loader';\n\nexport default function EvrBalance(props) {\n  const { balance } = props;\n\n  return (\n    <Card className=\"mt-1 bg-unicorn border-0 text-light\">\n      {((balance || balance === 0) && <Tooltip title=\"Total EVR balance\">\n        <CardContent className=\"pt-1 pb-1 text-center wallet-balance\">\n          <span className=\"font-weight-bold amount\">\n            {balance}\n          </span>\n          <span className=\"font-weight-normal ml-1 evr\">\n            EVR\n          </span>\n        </CardContent></Tooltip>) || <Loader className=\"mt-1 p-2\" size=\"1.5rem\" />}\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function AccordionsCollapse(props) {\n  const {\n    id,\n    summary,\n    panelClassName,\n    panelSummaryClassName,\n    panelDetailClassName,\n    headerTooltip\n  } = props;\n\n  const [expanded, setExpanded] = React.useState(props.expanded ? id : false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const panelSummary = <ExpansionPanelSummary\n    expandIcon={<ExpandMoreIcon className={panelSummaryClassName} />}\n    aria-controls=\"panel1bh-content\"\n    id=\"panel1bh-header\">\n    {summary}\n  </ExpansionPanelSummary>\n\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === id}\n        onChange={handleChange(id)}\n        className={panelClassName}>\n        {headerTooltip ?\n          <Tooltip title={headerTooltip}>{panelSummary}</Tooltip> :\n          panelSummary}\n        <ExpansionPanelDetails\n          className={`${panelDetailClassName} p-0`}>\n          {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import { Button, Grid, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport AccordionsCollapse from '../../../components/AccordionsCollapse';\nimport RegularTable from '../../../components/RegularTable';\nimport ModalDialog from '../../../components/ModalDialog';\n\nexport default function Lease(props) {\n  const { lease } = props;\n\n  const [showTos, setShowTos] = React.useState(false);\n\n  const tableHeadings = {\n    key: 'Key',\n    value: 'Value'\n  };\n  const tableValues = [\n    {\n      key: 'Lease Amount',\n      value: <Tooltip title=\"EVRs per Moment\"><span>{lease.leaseAmount}</span></Tooltip>\n    },\n    {\n      key: 'TOS',\n      value: <Tooltip title=\"Show Terms of Service\">\n        <Button className=\"tos-button\" size=\"small\" variant=\"outlined\" onClick={() => setShowTos(true)}>\n          {lease.halfTos}...\n        </Button>\n      </Tooltip>\n    }\n  ];\n\n  return (\n    <Grid item xs={12} className=\"pb-2\">\n      <AccordionsCollapse\n        id={lease.nfTokenId}\n        summary={<Typography className=\"text-truncate pl-2\" component={'span'}>\n          {lease.nfTokenId}</Typography>}\n        expanded=\"true\"\n        panelClassName=\"bg-unicorn text-light\"\n        panelSummaryClassName=\"text-light\"\n        panelDetailClassName=\"text-light overflow-auto\"\n        headerTooltip=\"NFToken Id\">\n        <Grid item xs={12}>\n          <RegularTable\n            className=\"bg-transparent rounded-0\"\n            cellClassName=\"text-light\"\n            headings={tableHeadings}\n            values={tableValues}\n            highlight={['value']}\n            hideHeadings />\n        </Grid>\n      </AccordionsCollapse>\n      <ModalDialog open={showTos} scroll=\"body\" onClose={() => setShowTos(false)}>\n        <div className=\"license\">{lease.tos}</div>\n      </ModalDialog>\n    </Grid>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport Lease from './Lease';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\n\nexport default function Leases(props) {\n  const { address } = props;\n\n  const [leases, setLeases] = React.useState(null);\n\n  const evernode = useEvernode();\n\n  useEffect(() => {\n    const fetchLeases = async () => {\n      setLeases(null);\n      const tos = await evernode.getTos();\n      const res = await evernode.getLeases(address);\n      const leaseData = res.map(l => {\n        const uriInfo = evernode.decodeLeaseUri(l.uri)\n        return {\n          ...l,\n          ...uriInfo,\n          tos: tos\n        }\n      });\n      setLeases(leaseData);\n    }\n\n    fetchLeases();\n  }, [address, evernode]);\n\n  return (\n    <Fragment>\n      {(leases && (leases.length ? <Grid container>\n        {leases.map((lease, index) => {\n          return <Lease key={index} lease={lease} />\n        })}\n      </Grid> : <span>There're no available leases!</span>)) || <Loader />}\n    </Fragment>\n  );\n}\n","export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Snackbar, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title=\"Copy to clipboard\" className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />\n          </Button>\n        </Tooltip>\n        <Snackbar\n          open={open}\n          onClose={handleClose}\n          autoHideDuration={1000}\n          anchorOrigin={{\n            horizontal: 'center', vertical: 'top'\n          }}\n          message=\"Copied to clipboard\"\n          className=\"alert\"\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\nexport default function ModalDialog(props) {\n  const { open, scroll, title, onConfirm, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\">\n      {title && <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>}\n      <DialogContent dividers={scroll === 'paper'} className=\"mb-2\">\n        {props.children}\n      </DialogContent>\n      {onConfirm && <DialogActions>\n        <Button onClick={onConfirm} variant=\"outlined\">\n          Ok\n        </Button>\n      </DialogActions>}\n    </Dialog>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\n\nexport default function RegularTable(props) {\n  const {\n    headings,\n    values,\n    highlight,\n    hideHeadings,\n    className,\n    cellClassName,\n    headerCellClassName\n  } = props;\n\n  const keys = Object.keys(headings);\n  return (\n    <Fragment>\n      <TableContainer className={`${className}`} component={Paper}>\n        <Table aria-label=\"simple table\">\n          {!hideHeadings && <TableHead>\n            <TableRow>\n              {keys.map((k, i) => {\n                return <TableCell\n                  key={i}\n                  className={((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${headerCellClassName}`}>\n                  {headings[k]}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>}\n          <TableBody>\n            {/* Checking whether there is a non empty object - Object.keys(value).length !== 0*/}\n            {values.map(value => (Object.keys(value).length !== 0 &&\n              <TableRow key={value[keys[0]]}>\n                {keys.map((k, i) => {\n                  if (value['cellConfigs'] && i === (value['cellConfigs'].colspan) - 1)\n                    return null;\n                  let width;\n                  if (k === keys[0] && value['cellConfigs'] && value['cellConfigs'].width)\n                    width = value['cellConfigs'].width;\n                  let paddingTopBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].paddingTopBottom)\n                    paddingTopBottom = value['cellConfigs'].paddingTopBottom;\n                  return <TableCell\n                    key={i}\n                    className={(value['cellConfigs'] && value['cellConfigs'].isSubtopic) ? 'pt-3 pb-2' : (((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${cellClassName}`)}\n                    align=\"left\"\n                    style={{ width: width, paddingTop: paddingTopBottom, paddingBottom: paddingTopBottom }}\n                    colSpan={((value['cellConfigs'] && value['cellConfigs'].colspan))}>\n                    {value[k]}\n                  </TableCell>\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport RegularTable from '../../components/RegularTable';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  TextField,\n  Button,\n  Hidden\n} from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Leases from '../../business-components/Leases';\n\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport { StorageKeys } from '../../common/constants';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport EvrBalance from '../../business-components/EvrBalance';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport ModalDialog from '../../components/ModalDialog';\nimport CopyBox from '../../components/CopyBox';\n\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: 'rgba(0,0,0,0.54)'\n    },\n    \"& label.Mui-error\": {\n      color: 'red'\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: 'rgba(0,0,0,0.87)'\n    },\n    \"& .MuiInput-underline.Mui-error:after\": {\n      borderBottomColor: '#f83245'\n    },\n    \"& label.MuiInputLabel-shrink\": {\n      transform: 'translate(0, 1.5px) scale(0.95)',\n      transformOrigin: 'top left'\n    }\n  }\n});\n\nexport default function Host(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const selfAddress = localStorage.getItem(StorageKeys.hostAddress);\n  const pathAddress = props.match.params.address;\n\n  const [address, setAddress] = React.useState(pathAddress || selfAddress);\n  const [inputAddress, setInputAddress] = React.useState(null);\n  const [info, setInfo] = React.useState(null);\n  const [showChangeAddress, setShowChangeAddress] = React.useState(false);\n\n  const inputAddressValid = useCallback(() => {\n    return /^r[a-zA-Z0-9]{24,34}$/g.test(inputAddress);\n  }, [inputAddress])\n\n  const handleChangeAddress = useCallback(() => {\n    if (inputAddress && inputAddressValid()) {\n      localStorage.setItem(StorageKeys.hostAddress, inputAddress);\n      setAddress(inputAddress);\n      setInputAddress(null);\n      setShowChangeAddress(false);\n    }\n  }, [inputAddress, inputAddressValid]);\n\n  const handleChangeAddressClose = useCallback(() => {\n    setShowChangeAddress(false);\n    setInputAddress(null);\n    // If the address change modal is closed without changing the address,\n    // Redirect to the home page.\n    if (!address)\n      history.push('/')\n  }, [address, history]);\n\n  const candidateRoute = function (address) {\n    history.push(`/candidate/${address}`);\n  };\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      setInfo(null);\n      const hosts = await evernode.getHosts({ address: address });\n      const config = await evernode.getConfigs();\n      const hostInfo = (hosts && hosts.length) ? hosts[0] : null;\n      const dudHostCandidates = await evernode.getDudHostCandidatesByOwner(address);\n      const candidate = await evernode.getCandidateByOwner(address);\n      const tableHeadings = {\n        key: 'Key',\n        value: 'Value'\n      }\n      let dudHostCandidateList = []\n      for (var dudHostCandidate of dudHostCandidates) {\n        dudHostCandidateList.push({\n          key: 'Id',\n          value: <Tooltip title=\"DudHost Candidate details\"><Button className=\"tos-button\" size=\"small\" variant=\"outlined\">{dudHostCandidate.id}...</Button></Tooltip>,\n        })\n      }\n      let tableValues = hostInfo ? [\n        {\n          key: 'Registration Token Id',\n          value: <Tooltip title=\"Registration token Id\"><span>{hostInfo.uriTokenId}</span></Tooltip>\n        },\n        {\n          key: 'Instances',\n          value: <Tooltip title=\"Active instances out of Maximum instances\">\n            <span>{hostInfo.activeInstances || 0} out of {hostInfo.maxInstances || 0}</span>\n          </Tooltip>\n        },\n        {\n          key: 'CPU Model',\n          value: <CPUModel modelName={hostInfo.cpuModelName} speed={hostInfo.cpuMHz} count={hostInfo.cpuCount} showTooltip />\n        },\n        {\n          key: 'Instance Size',\n          value: <InstanceSpecs cpu={hostInfo.cpuMicrosec} ram={hostInfo.ramMb} disk={hostInfo.diskMb} instanceCount={hostInfo.maxInstances} showTooltip />\n        },\n        {\n          key: 'Last Heartbeat Index',\n          value: <Tooltip title={`${config.momentBaseInfo.momentType === 'ledger' ? 'XRP Ledger' : 'Timestamp'} at which the last heartbeat was received`}><span>{hostInfo.lastHeartbeatIndex}</span></Tooltip>\n        },\n        {\n          key: 'Registered on XRP Ledger',\n          value: <Tooltip title=\"XRP Ledger at which the host registered\"><span>{hostInfo.registrationLedger}</span></Tooltip>\n        },\n        {\n          key: 'Registration Fee',\n          value: <Tooltip title=\"Registration fee (in EVRs) spent by the host\"><span>{hostInfo.registrationFee}</span></Tooltip>\n        },\n        {\n          key: 'Version',\n          value: <Tooltip title=\"Host's Sashimono version\"><span>{hostInfo.version}</span></Tooltip>\n        },\n        {\n          key: 'Registered on Timestamp',\n          value: <Tooltip title=\"Timestamp at which the host registered\"><span>{hostInfo.registrationTimestamp}</span></Tooltip>\n        },\n        {\n          key: 'Accumulated Reward Amount',\n          value: <Tooltip title=\"Rewards gained upto now\"><span>{hostInfo.accumulatedRewardAmount}</span></Tooltip>\n        },\n        {\n          key: 'Last Vote Timestamp',\n          value: <Tooltip title=\"Timestamp when the last vote has been sent\"><span>{hostInfo.lastVoteTimestamp}</span></Tooltip>\n        }\n      ] : [];\n      const evrBalance = await evernode.getEVRBalance(address);\n      setInfo({\n        evrBalance: evrBalance,\n        hostInfo: hostInfo,\n        tableHeadings: tableHeadings,\n        tableValues: tableValues,\n        dudHostCandidates: dudHostCandidates,\n        candidate: candidate\n      });\n    }\n\n    // If the path address param is empty this is My Host page and no address is set in local storage.\n    if (!address)\n      setShowChangeAddress(true);\n    else if (pathAddress === selfAddress)\n      history.push('/host');\n    else\n      fetchInfo();\n  }, [evernode, history, address, pathAddress, selfAddress]);\n\n  return (\n    <>{address &&\n      <Fragment>\n        <PageTitle\n          responsive={true}\n          titleHeading={\n            <div className=\"d-flex align-items-center display-7\">\n              <Hidden mdDown>\n                <span className=\"mr-2\">\n                  {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"1.8em\" />}\n                </span>\n              </Hidden>\n              {address}\n              {address === selfAddress &&\n                <Tooltip title=\"Change address\">\n                  <EditIcon className=\"ml-1 edit-btn\" onClick={() => setShowChangeAddress(true)} />\n                </Tooltip>}\n              <span>{info?.hostInfo &&\n                <Tooltip title={info.hostInfo.active ? 'Active' : 'Inactive'}>\n                  <div className={`ml-1 rounded-circle ${info.hostInfo.active ? 'online' : 'offline'}`}></div>\n                </Tooltip>}</span>\n            </div>\n          }\n          titleDescription={info ? (info?.hostInfo && <Typography type=\"p\">{info.hostInfo.domain}</Typography>) :\n            <Loader className=\"p-0\" size=\"1rem\" />}>\n          <Hidden mdUp>\n            <span>\n              {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"2.5em\" />}\n            </span>\n          </Hidden>\n          <EvrBalance balance={+(+info?.evrBalance).toFixed(3)} />\n        </PageTitle>\n        <Grid container spacing={4}>\n          {info && info.hostInfo && info.hostInfo.hostMessage ? (\n            <Grid item xs={12}>\n              <Card\n                style={{ border: \"none\", boxShadow: \"none\" }}\n                className=\"mb-4 bg-transparent\"\n              >\n                <CardContent className=\"p-0\">\n                  <div className=\"p-3 border rounded host-message mb-0\">\n                    {(info &&\n                      (info.hostInfo.hostMessage\n                        ? info.hostInfo.hostMessage\n                        : \"There is no host message available!\")) || (\n                        <Loader className=\"p-4\" />\n                      )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Registration Info\n                </h5>\n                {(info &&\n                  (info.hostInfo ? (\n                    <RegularTable\n                      headings={info.tableHeadings}\n                      values={info.tableValues}\n                      highlight={[\"key\"]}\n                      hideHeadings\n                    />\n                  ) : (\n                    <span>Host is not Registered!</span>\n                  ))) || <Loader className=\"p-4\" />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Available Leases\n                </h5>\n                {address && <Leases address={address} />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className='col'>\n              {info && info.candidate &&\n                <CardContent className=\"p-0 row\">\n                  <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                    Proposed New Hook Candidate\n                  </h5>\n                  <Card className=\"row copy-card p-2\">\n                    <CopyBox copyText={info.candidate.uniqueId}>\n                      <Button onClick={() => candidateRoute(info.candidate.uniqueId)}>{info.candidate.uniqueId}</Button>\n                    </CopyBox>\n                  </Card>\n                </CardContent>\n              }\n              {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 &&\n                info.dudHostCandidates.map((dudHostCandidate, i) => {\n                  return <CardContent className=\"p-0 row\">\n                    <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                      Proposed Dud Host Reports\n                    </h5>\n                    <Card className=\"row copy-card p-2\">\n                      <CopyBox copyText={dudHostCandidate.uniqueId} key={i}>\n                        <Button onClick={() => candidateRoute(dudHostCandidate.uniqueId)}>{dudHostCandidate.uniqueId}</Button>\n                      </CopyBox>\n                    </Card>\n                  </CardContent>\n                })\n              }\n              <br />\n            </div>\n          </Grid>\n        </Grid>\n      </Fragment >}\n      {address === selfAddress && <ModalDialog open={showChangeAddress} scroll=\"body\" onClose={handleChangeAddressClose}>\n        <div>\n          <TextField autoFocus error={!!inputAddress && !inputAddressValid()} classes={classes} className=\"address-input\" variant=\"standard\" label=\"Enter the host XRP address\" multiline value={inputAddress || ''} onChange={(e) => setInputAddress(e.target.value)} />\n        </div>\n        <div>\n          <Button onClick={handleChangeAddress} variant=\"outlined\" disabled={!inputAddress || !inputAddressValid()} className=\"pull-right mt-3\">OK</Button>\n        </div>\n      </ModalDialog>}</>\n  );\n}\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","placement","style","fontSize","cursor","alt","svg","EvrBalance","balance","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","AccordionsCollapse","panel","id","summary","panelClassName","panelSummaryClassName","panelDetailClassName","headerTooltip","React","expanded","setExpanded","panelSummary","ExpansionPanelSummary","expandIcon","ExpandMore","Fragment","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelDetails","children","Lease","lease","showTos","setShowTos","tableValues","key","value","leaseAmount","Button","variant","onClick","halfTos","Grid","item","xs","nfTokenId","Typography","component","RegularTable","cellClassName","headings","values","highlight","hideHeadings","ModalDialog","open","scroll","onClose","tos","Leases","address","leases","setLeases","evernode","useEvernode","useEffect","fetchLeases","getTos","getLeases","res","leaseData","map","l","uriInfo","decodeLeaseUri","uri","length","container","index","StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","copyText","iconSize","useState","setOpen","e","stopPropagation","navigator","clipboard","writeText","reason","autoHideDuration","anchorOrigin","horizontal","vertical","message","onConfirm","dividers","headerCellClassName","keys","Object","Paper","k","i","includes","colspan","width","paddingTopBottom","isSubtopic","align","paddingTop","paddingBottom","colSpan","useStyles","makeStyles","root","color","borderBottomColor","transform","transformOrigin","Host","classes","history","useHistory","selfAddress","localStorage","getItem","pathAddress","match","params","setAddress","inputAddress","setInputAddress","info","setInfo","showChangeAddress","setShowChangeAddress","inputAddressValid","useCallback","test","handleChangeAddress","setItem","handleChangeAddressClose","candidateRoute","fetchInfo","getHosts","hosts","getConfigs","config","hostInfo","getDudHostCandidatesByOwner","dudHostCandidates","getCandidateByOwner","candidate","tableHeadings","dudHostCandidateList","uriTokenId","activeInstances","maxInstances","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","momentBaseInfo","momentType","lastHeartbeatIndex","registrationLedger","registrationFee","version","registrationTimestamp","accumulatedRewardAmount","lastVoteTimestamp","getEVRBalance","evrBalance","responsive","titleHeading","mdDown","active","titleDescription","type","domain","mdUp","toFixed","spacing","hostMessage","border","boxShadow","md","uniqueId","autoFocus","error","label","multiline","target","disabled"],"sourceRoot":""}