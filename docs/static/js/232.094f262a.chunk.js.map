{"version":3,"file":"static/js/232.094f262a.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/EvrBalance/index.js","business-components/InstanceSpecs/index.js","components/AccordionsCollapse/index.js","business-components/Leases/Lease/index.js","business-components/Leases/index.js","common/constants.js","components/CopyBox/index.js","components/ModalDialog/index.js","components/RegularTable/index.js","pages/Host/index.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\nimport ISO3166_1 from \"iso-3166-1\";\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  const isValidCountryCode = (code) => {\n    return ISO3166_1.whereAlpha2(code) !== undefined;\n  };\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  if (isValidCountryCode(countryCode)) {\n    return (\n      <StyledTooltip title={countryCode} placement='right-end'>\n        <div>\n          <ReactCountryFlag\n            className=\"emojiFlag\"\n            countryCode={countryCode}\n            style={{\n              fontSize: size,\n              cursor: 'pointer'\n            }}\n            aria-label={countryCode}\n            alt={countryCode}\n            svg\n          />\n        </div>\n      </StyledTooltip>\n    );\n  } else {\n    return (\n      <span style={{fontSize: \"24px\", width: \"42px\", textAlign: \"center\"}}>{countryCode}</span>\n    )\n  }\n}","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Tooltip\n} from '@material-ui/core';\n\nimport Loader from '../../components/Loader';\n\nexport default function EvrBalance(props) {\n  const { balance } = props;\n\n  return (\n    <Card className=\"mt-1 bg-unicorn border-0 text-light\">\n      {((balance || balance === 0) && <Tooltip title=\"Total EVR balance\">\n        <CardContent className=\"pt-1 pb-1 text-center wallet-balance\">\n          <span className=\"font-weight-bold amount\">\n            {balance}\n          </span>\n          <span className=\"font-weight-normal ml-1 evr\">\n            EVR\n          </span>\n        </CardContent></Tooltip>) || <Loader className=\"mt-1 p-2\" size=\"1.5rem\" />}\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function AccordionsCollapse(props) {\n  const {\n    id,\n    summary,\n    panelClassName,\n    panelSummaryClassName,\n    panelDetailClassName,\n    headerTooltip\n  } = props;\n\n  const [expanded, setExpanded] = React.useState(props.expanded ? id : false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const panelSummary = <ExpansionPanelSummary\n    expandIcon={<ExpandMoreIcon className={panelSummaryClassName} />}\n    aria-controls=\"panel1bh-content\"\n    id=\"panel1bh-header\">\n    {summary}\n  </ExpansionPanelSummary>\n\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === id}\n        onChange={handleChange(id)}\n        className={panelClassName}>\n        {headerTooltip ?\n          <Tooltip title={headerTooltip}>{panelSummary}</Tooltip> :\n          panelSummary}\n        <ExpansionPanelDetails\n          className={`${panelDetailClassName} p-0`}>\n          {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import { Button, Grid, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport AccordionsCollapse from '../../../components/AccordionsCollapse';\nimport RegularTable from '../../../components/RegularTable';\nimport ModalDialog from '../../../components/ModalDialog';\n\nexport default function Lease(props) {\n  const { lease } = props;\n\n  const [showTos, setShowTos] = React.useState(false);\n\n  const tableHeadings = {\n    key: 'Key',\n    value: 'Value'\n  };\n  const tableValues = [\n    {\n      key: 'Lease Amount',\n      value: <Tooltip title=\"EVRs per Moment\"><span>{lease.leaseAmount}</span></Tooltip>\n    },\n    {\n      key: 'TOS',\n      value: <Tooltip title=\"Show Terms of Service\">\n        <Button className=\"tos-button\" size=\"small\" variant=\"outlined\" onClick={() => setShowTos(true)}>\n          {lease.halfTos}...\n        </Button>\n      </Tooltip>\n    }\n  ];\n\n  if (lease.outboundIP)\n    tableValues.push({\n      key: 'Outbound IP',\n      value: <Tooltip title=\"IP address for the instance's outbound connections\"><span>{lease.outboundIP.address}</span></Tooltip>\n    });\n\n  return (\n    <Grid item xs={12} className=\"pb-2\">\n      <AccordionsCollapse\n        id={lease.uriTokenId}\n        summary={<Typography className=\"text-truncate pl-2\" component={'span'}>\n          {lease.uriTokenId}</Typography>}\n        expanded=\"true\"\n        panelClassName=\"bg-unicorn text-light\"\n        panelSummaryClassName=\"text-light\"\n        panelDetailClassName=\"text-light overflow-auto\"\n        headerTooltip=\"URI Token Id\">\n        <Grid item xs={12}>\n          <RegularTable\n            className=\"bg-transparent rounded-0\"\n            cellClassName=\"text-light\"\n            headings={tableHeadings}\n            values={tableValues}\n            highlight={['value']}\n            hideHeadings />\n        </Grid>\n      </AccordionsCollapse>\n      <ModalDialog open={showTos} scroll=\"body\" onClose={() => setShowTos(false)}>\n        <div className=\"license\">{lease.tos}</div>\n      </ModalDialog>\n    </Grid>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport Lease from './Lease';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\n\nexport default function Leases(props) {\n  const { address } = props;\n\n  const [leases, setLeases] = React.useState(null);\n\n  const evernode = useEvernode();\n\n  useEffect(() => {\n    const fetchLeases = async () => {\n      setLeases(null);\n      const tos = await evernode.getTos();\n      const res = await evernode.getLeases(address);\n      const leaseData = res.map(l => {\n        const uriInfo = evernode.decodeLeaseUri(l.uri)\n        return {\n          ...l,\n          ...uriInfo,\n          tos: tos\n        }\n      }).sort((a,b) => a.leaseIndex - b.leaseIndex);\n      setLeases(leaseData);\n    }\n\n    fetchLeases();\n  }, [address, evernode]);\n\n  return (\n    <Fragment>\n      {(leases && (leases.length ? <Grid container>\n        {leases.map((lease, index) => {\n          return <Lease key={index} lease={lease} />\n        })}\n      </Grid> : <span>There're no available leases!</span>)) || <Loader />}\n    </Fragment>\n  );\n}\n","export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\nexport default function ModalDialog(props) {\n  const { open, scroll, title, onConfirm, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\">\n      {title && <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>}\n      <DialogContent dividers={scroll === 'paper'} className=\"mb-2\">\n        {props.children}\n      </DialogContent>\n      {onConfirm && <DialogActions>\n        <Button onClick={onConfirm} variant=\"outlined\">\n          Ok\n        </Button>\n      </DialogActions>}\n    </Dialog>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\n\nexport default function RegularTable(props) {\n  const {\n    headings,\n    values,\n    highlight,\n    hideHeadings,\n    className,\n    cellClassName,\n    headerCellClassName,\n    isNested\n  } = props;\n\n  const keys = Object.keys(headings);\n  return (\n    <Fragment>\n      <TableContainer className={`${className}`} component={Paper} style={isNested && { boxShadow: 'none', borderRadius: '0', width: \"max-content\" }}>\n        <Table aria-label=\"simple table\">\n          {!hideHeadings && <TableHead>\n            <TableRow>\n              {keys.map((k, i) => {\n                return <TableCell\n                  key={i}\n                  className={((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${headerCellClassName}`}>\n                  {headings[k]}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>}\n          <TableBody>\n            {/* Checking whether there is a non empty object - Object.keys(value).length !== 0*/}\n            {values.map(value => (Object.keys(value).length !== 0 &&\n              <TableRow key={value[keys[0]]}>\n                {keys.map((k, i) => {\n                  if (value['cellConfigs'] && i === (value['cellConfigs'].colspan) - 1)\n                    return null;\n                  let width;\n                  if (k === keys[0] && value['cellConfigs'] && value['cellConfigs'].width)\n                    width = value['cellConfigs'].width;\n                  let paddingTopBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].paddingTopBottom)\n                    paddingTopBottom = value['cellConfigs'].paddingTopBottom;\n                  let borderBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].borderBottom)\n                    borderBottom = value['cellConfigs'].borderBottom;\n                  let paddingLeftRight;\n                  if (k === keys[1] && (value['cellConfigs'] && value['cellConfigs'].paddingLeftRight))\n                    paddingLeftRight = value['cellConfigs'].paddingLeftRight;\n                  return <TableCell\n                    key={i}\n                    className={(value['cellConfigs'] && value['cellConfigs'].isSubtopic) ? 'pt-3 pb-2' : (((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${cellClassName}`)}\n                    align={(value['cellConfigs'] && value['cellConfigs'].align) || \"left\"}\n                    style={{ width: width, paddingTop: paddingTopBottom, paddingBottom: paddingTopBottom, paddingLeft: paddingLeftRight, paddingRight: paddingLeftRight, borderBottom: borderBottom }}\n                    colSpan={((value['cellConfigs'] && value['cellConfigs'].colspan))}>\n                    {value[k]}\n                  </TableCell>\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport RegularTable from '../../components/RegularTable';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  TextField,\n  Button,\n  Hidden\n} from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Leases from '../../business-components/Leases';\n\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport { StorageKeys } from '../../common/constants';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport EvrBalance from '../../business-components/EvrBalance';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport ModalDialog from '../../components/ModalDialog';\nimport CopyBox from '../../components/CopyBox';\n\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: 'rgba(0,0,0,0.54)'\n    },\n    \"& label.Mui-error\": {\n      color: 'red'\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: 'rgba(0,0,0,0.87)'\n    },\n    \"& .MuiInput-underline.Mui-error:after\": {\n      borderBottomColor: '#f83245'\n    },\n    \"& label.MuiInputLabel-shrink\": {\n      transform: 'translate(0, 1.5px) scale(0.95)',\n      transformOrigin: 'top left'\n    }\n  }\n});\n\nexport default function Host(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const selfAddress = localStorage.getItem(StorageKeys.hostAddress);\n  const pathAddress = props.match.params.address;\n\n  const [address, setAddress] = React.useState(pathAddress || selfAddress);\n  const [inputAddress, setInputAddress] = React.useState(null);\n  const [info, setInfo] = React.useState(null);\n  const [showChangeAddress, setShowChangeAddress] = React.useState(false);\n\n  const inputAddressValid = useCallback(() => {\n    return /^r[a-zA-Z0-9]{24,34}$/g.test(inputAddress);\n  }, [inputAddress])\n\n  const handleChangeAddress = useCallback(() => {\n    if (inputAddress && inputAddressValid()) {\n      localStorage.setItem(StorageKeys.hostAddress, inputAddress);\n      setAddress(inputAddress);\n      setInputAddress(null);\n      setShowChangeAddress(false);\n    }\n  }, [inputAddress, inputAddressValid]);\n\n  const handleChangeAddressClose = useCallback(() => {\n    setShowChangeAddress(false);\n    setInputAddress(null);\n    // If the address change modal is closed without changing the address,\n    // Redirect to the home page.\n    if (!address)\n      history.push('/')\n  }, [address, history]);\n\n  const candidateRoute = function (address) {\n    history.push(`/candidate/${address}`);\n  };\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      setInfo(null);\n      const hosts = await evernode.getHosts({ address: address });\n      const config = await evernode.getConfigs();\n      const hostInfo = (hosts && hosts.length) ? hosts[0] : null;\n      const dudHostCandidates = await evernode.getDudHostCandidatesByOwner(address);\n      const candidate = await evernode.getCandidateByOwner(address);\n      const tableHeadings = {\n        key: 'Key',\n        value: 'Value'\n      }\n      let dudHostCandidateList = []\n      for (var dudHostCandidate of dudHostCandidates) {\n        dudHostCandidateList.push({\n          key: 'Id',\n          value: <Tooltip title=\"DudHost Candidate details\"><Button className=\"tos-button\" size=\"small\" variant=\"outlined\">{dudHostCandidate.id}...</Button></Tooltip>,\n        })\n      }\n      let tableValues = hostInfo ? [\n        {\n          key: 'Registration Token Id',\n          value: <Tooltip title=\"Registration token Id\"><span>{hostInfo.uriTokenId}</span></Tooltip>\n        },\n        {\n          key: 'Host Email',\n          value: <Tooltip title=\"Email address of the host owner\"><span>{hostInfo.email}</span></Tooltip>\n        },\n        {\n          key: 'Instances',\n          value:\n            <RegularTable\n              headings={{\n                toLet: 'To Let',\n                leased: 'Leased',\n                total: 'Total'\n              }}\n              isNested\n              hideHeadings\n              values={[\n                {\n                  toLet: 'To Let',\n                  leased: 'Leased',\n                  total: 'Total',\n                  cellConfigs: { align: 'center', paddingTopBottom: '8px' }\n                },\n                {\n                  toLet: <Tooltip title=\"Number of instances available for lease\">\n                    <span>\n                      {Math.max((hostInfo.maxInstances || 0) - (hostInfo.activeInstances || 0), 0)}\n                    </span>\n                  </Tooltip>,\n                  leased: <Tooltip title=\"Number of leased instances\">\n                    <span>\n                      {hostInfo.activeInstances || 0}\n                    </span>\n                  </Tooltip>,\n                  total: <Tooltip title=\"Number of total instances\">\n                    <span>\n                      {hostInfo.maxInstances || 0}\n                    </span>\n                  </Tooltip>,\n                  cellConfigs: { align: 'center', paddingTopBottom: '8px', borderBottom: '0' }\n                }\n              ]}\n            />,\n          cellConfigs: { paddingTopBottom: '0', paddingLeftRight: '0' }\n        },\n        {\n          key: 'CPU Model',\n          value: <CPUModel modelName={hostInfo.cpuModelName} speed={hostInfo.cpuMHz} count={hostInfo.cpuCount} showTooltip />\n        },\n        {\n          key: 'Instance Size',\n          value: <InstanceSpecs cpu={hostInfo.cpuMicrosec} ram={hostInfo.ramMb} disk={hostInfo.diskMb} instanceCount={hostInfo.maxInstances} showTooltip />\n        },\n        {\n          key: 'Last Heartbeat Index',\n          value: <Tooltip title={`${config.momentBaseInfo.momentType === 'ledger' ? 'XRP Ledger' : 'Timestamp'} at which the last heartbeat was received`}><span>{hostInfo.lastHeartbeatIndex}</span></Tooltip>\n        },\n        {\n          key: 'Registered on XRP Ledger',\n          value: <Tooltip title=\"XRP Ledger at which the host registered\"><span>{hostInfo.registrationLedger}</span></Tooltip>\n        },\n        {\n          key: 'Registration Fee',\n          value: <Tooltip title=\"Registration fee (in EVRs) spent by the host\"><span>{hostInfo.registrationFee}</span></Tooltip>\n        },\n        {\n          key: 'Version',\n          value: <Tooltip title=\"Host's Sashimono version\"><span>{hostInfo.version}</span></Tooltip>\n        },\n        {\n          key: 'Registered on Timestamp',\n          value: <Tooltip title=\"Timestamp at which the host registered\"><span>{hostInfo.registrationTimestamp}</span></Tooltip>\n        },\n        {\n          key: 'Accumulated Reward Amount',\n          value: <Tooltip title=\"Rewards gained upto now\"><span>{hostInfo.accumulatedRewardAmount}</span></Tooltip>\n        },\n        {\n          key: 'Last Vote Timestamp',\n          value: <Tooltip title=\"Timestamp when the last vote has been sent\"><span>{hostInfo.lastVoteTimestamp}</span></Tooltip>\n        }\n      ] : [];\n      const evrBalance = await evernode.getEVRBalance(address);\n      setInfo({\n        evrBalance: evrBalance,\n        hostInfo: hostInfo,\n        tableHeadings: tableHeadings,\n        tableValues: tableValues,\n        dudHostCandidates: dudHostCandidates,\n        candidate: candidate\n      });\n    }\n\n    // If the path address param is empty this is My Host page and no address is set in local storage.\n    if (!address)\n      setShowChangeAddress(true);\n    else if (pathAddress === selfAddress)\n      history.push('/host');\n    else\n      fetchInfo();\n  }, [evernode, history, address, pathAddress, selfAddress]);\n\n  return (\n    <>{address &&\n      <Fragment>\n        <PageTitle\n          responsive={true}\n          titleHeading={\n            <div className=\"d-flex align-items-center display-7\">\n              <Hidden mdDown>\n                <span className=\"mr-2\">\n                  {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"1.8em\" />}\n                </span>\n              </Hidden>\n              {address}\n              {address === selfAddress &&\n                <Tooltip title=\"Change address\">\n                  <EditIcon className=\"ml-1 edit-btn\" onClick={() => setShowChangeAddress(true)} />\n                </Tooltip>}\n              <span>{info?.hostInfo &&\n                <Tooltip title={info.hostInfo.active ? 'Active' : 'Inactive'}>\n                  <div className={`ml-1 rounded-circle ${info.hostInfo.active ? 'online' : 'offline'}`}></div>\n                </Tooltip>}</span>\n            </div>\n          }\n          titleDescription={info ? (info?.hostInfo && <Typography type=\"p\">{info.hostInfo.domain}</Typography>) :\n            <Loader className=\"p-0\" size=\"1rem\" />}>\n          <Hidden mdUp>\n            <span>\n              {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"2.5em\" />}\n            </span>\n          </Hidden>\n          <EvrBalance balance={+(+info?.evrBalance).toFixed(3)} />\n        </PageTitle>\n        <Grid container spacing={4}>\n          {info && info.hostInfo && info.hostInfo.hostMessage ? (\n            <Grid item xs={12}>\n              <Card\n                style={{ border: \"none\", boxShadow: \"none\" }}\n                className=\"mb-4 bg-transparent\"\n              >\n                <CardContent className=\"p-0\">\n                  <div className=\"p-3 border rounded host-message mb-0\">\n                    {(info &&\n                      (info.hostInfo.hostMessage\n                        ? info.hostInfo.hostMessage\n                        : \"There is no host message available!\")) || (\n                        <Loader className=\"p-4\" />\n                      )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Registration Info\n                </h5>\n                {(info &&\n                  (info.hostInfo ? (\n                    <RegularTable\n                      headings={info.tableHeadings}\n                      values={info.tableValues}\n                      highlight={[\"key\"]}\n                      hideHeadings\n                    />\n                  ) : (\n                    <span>Host is not Registered!</span>\n                  ))) || <Loader className=\"p-4\" />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Available Leases\n                </h5>\n                {address && <Leases address={address} />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className='col'>\n              {info && info.candidate &&\n              <CardContent className=\"p-0 row\">\n                <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed New Hook Candidate\n                </h5>\n                <Card className=\"row copy-card p-2\">\n                  <CopyBox copyText={info.candidate.uniqueId}>\n                    <Button onClick={() => candidateRoute(info.candidate.uniqueId)}>{info.candidate.uniqueId}</Button>\n                  </CopyBox>\n                </Card>\n              </CardContent>\n              }\n              <CardContent className=\"p-0 row\">\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 && <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed Dud Host Reports\n                </h5>}\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 &&\n                info.dudHostCandidates.map((dudHostCandidate, i) => {\n                  return <><Card className=\"row copy-card p-2\">\n                    <CopyBox copyText={dudHostCandidate.uniqueId} key={i}>\n                      <Button onClick={() => candidateRoute(dudHostCandidate.uniqueId)}>{dudHostCandidate.uniqueId}</Button>\n                    </CopyBox>\n                  </Card>\n                    <br />\n                  </>\n                })\n                }\n              </CardContent>\n              <br />\n            </div>\n          </Grid>\n        </Grid>\n      </Fragment >}\n      {address === selfAddress && <ModalDialog open={showChangeAddress} scroll=\"body\" onClose={handleChangeAddressClose}>\n        <div>\n          <TextField autoFocus error={!!inputAddress && !inputAddressValid()} classes={classes} className=\"address-input\" variant=\"standard\" label=\"Enter the host XRP address\" multiline value={inputAddress || ''} onChange={(e) => setInputAddress(e.target.value)} />\n        </div>\n        <div>\n          <Button onClick={handleChangeAddress} variant=\"outlined\" disabled={!inputAddress || !inputAddressValid()} className=\"pull-right mt-3\">OK</Button>\n        </div>\n      </ModalDialog>}</>\n  );\n}\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","concat","text","join","content","_jsx","Typography","className","children","Tooltip","title","CountryFlag","code","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","undefined","ISO3166_1","placement","ReactCountryFlag","style","fontSize","cursor","alt","svg","width","textAlign","EvrBalance","balance","Card","_jsxs","CardContent","Loader","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","AccordionsCollapse","panel","id","summary","panelClassName","panelSummaryClassName","panelDetailClassName","headerTooltip","_React$useState","React","expanded","_React$useState2","_slicedToArray","setExpanded","panelSummary","ExpansionPanelSummary","expandIcon","ExpandMoreIcon","Fragment","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelDetails","Lease","lease","showTos","setShowTos","tableValues","key","value","leaseAmount","Button","variant","onClick","halfTos","outboundIP","address","Grid","item","xs","uriTokenId","component","RegularTable","cellClassName","headings","values","highlight","hideHeadings","ModalDialog","open","scroll","onClose","tos","Leases","leases","setLeases","evernode","useEvernode","useEffect","fetchLeases","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","leaseData","wrap","_context","prev","next","getTos","sent","getLeases","map","l","uriInfo","decodeLeaseUri","uri","_objectSpread","sort","a","b","leaseIndex","stop","apply","arguments","length","container","index","StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","copyText","iconSize","_useState","useState","_useState2","setOpen","e","stopPropagation","navigator","clipboard","writeText","setTimeout","DoneAll","color","FileCopyOutlined","onConfirm","Dialog","DialogTitle","DialogContent","dividers","DialogActions","headerCellClassName","isNested","keys","Object","TableContainer","Paper","boxShadow","borderRadius","Table","TableHead","TableRow","k","i","TableCell","includes","TableBody","colspan","paddingTopBottom","borderBottom","paddingLeftRight","isSubtopic","align","paddingTop","paddingBottom","paddingLeft","paddingRight","colSpan","useStyles","makeStyles","root","borderBottomColor","transform","transformOrigin","Host","classes","history","useHistory","selfAddress","localStorage","getItem","pathAddress","match","params","setAddress","_React$useState3","_React$useState4","inputAddress","setInputAddress","_React$useState5","_React$useState6","info","setInfo","_React$useState7","_React$useState8","showChangeAddress","setShowChangeAddress","inputAddressValid","useCallback","test","handleChangeAddress","setItem","handleChangeAddressClose","candidateRoute","fetchInfo","hosts","config","hostInfo","dudHostCandidates","candidate","tableHeadings","dudHostCandidateList","_iterator","_step","evrBalance","getHosts","getConfigs","getDudHostCandidatesByOwner","getCandidateByOwner","_createForOfIteratorHelper","s","done","err","f","email","toLet","leased","total","cellConfigs","max","maxInstances","activeInstances","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","momentBaseInfo","momentType","lastHeartbeatIndex","registrationLedger","registrationFee","version","registrationTimestamp","accumulatedRewardAmount","lastVoteTimestamp","getEVRBalance","_Fragment","PageTitle","responsive","titleHeading","Hidden","mdDown","EditIcon","active","titleDescription","type","domain","mdUp","toFixed","spacing","hostMessage","border","md","uniqueId","TextField","autoFocus","error","label","multiline","target","disabled"],"sourceRoot":""}