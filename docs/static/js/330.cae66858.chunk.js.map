{"version":3,"file":"static/js/330.cae66858.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","common/constants.js","components/CopyBox/index.js","components/RegularTable/index.js","components/AccordionsCollapse/index.js","components/ModalDialog/index.js","business-components/Leases/Lease/index.js","business-components/Leases/index.js","business-components/EvrBalance/index.js","pages/Host/index.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\nimport ISO3166_1 from \"iso-3166-1\";\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  const isValidCountryCode = (code) => {\n    return ISO3166_1.whereAlpha2(code) !== undefined;\n  };\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  if (isValidCountryCode(countryCode)) {\n    return (\n      <StyledTooltip title={countryCode} placement='right-end'>\n        <div>\n          <ReactCountryFlag\n            className=\"emojiFlag\"\n            countryCode={countryCode}\n            style={{\n              fontSize: size,\n              cursor: 'pointer'\n            }}\n            aria-label={countryCode}\n            alt={countryCode}\n            svg\n          />\n        </div>\n      </StyledTooltip>\n    );\n  } else {\n    return (\n      <span style={{fontSize: \"24px\", width: \"42px\", textAlign: \"center\"}}>{countryCode}</span>\n    )\n  }\n}","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\n\nexport default function RegularTable(props) {\n  const {\n    headings,\n    values,\n    highlight,\n    hideHeadings,\n    className,\n    cellClassName,\n    headerCellClassName,\n    isNested\n  } = props;\n\n  const keys = Object.keys(headings);\n  return (\n    <Fragment>\n      <TableContainer className={`${className}`} component={Paper} style={isNested && { boxShadow: 'none', borderRadius: '0', width: \"max-content\" }}>\n        <Table aria-label=\"simple table\">\n          {!hideHeadings && <TableHead>\n            <TableRow>\n              {keys.map((k, i) => {\n                return <TableCell\n                  key={i}\n                  className={((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${headerCellClassName}`}>\n                  {headings[k]}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>}\n          <TableBody>\n            {/* Checking whether there is a non empty object - Object.keys(value).length !== 0*/}\n            {values.map(value => (Object.keys(value).length !== 0 &&\n              <TableRow key={value[keys[0]]}>\n                {keys.map((k, i) => {\n                  if (value['cellConfigs'] && i === (value['cellConfigs'].colspan) - 1)\n                    return null;\n                  let width;\n                  if (k === keys[0] && value['cellConfigs'] && value['cellConfigs'].width)\n                    width = value['cellConfigs'].width;\n                  let paddingTopBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].paddingTopBottom)\n                    paddingTopBottom = value['cellConfigs'].paddingTopBottom;\n                  let borderBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].borderBottom)\n                    borderBottom = value['cellConfigs'].borderBottom;\n                  let paddingLeftRight;\n                  if (k === keys[1] && (value['cellConfigs'] && value['cellConfigs'].paddingLeftRight))\n                    paddingLeftRight = value['cellConfigs'].paddingLeftRight;\n                  return <TableCell\n                    key={i}\n                    className={(value['cellConfigs'] && value['cellConfigs'].isSubtopic) ? 'pt-3 pb-2' : (((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${cellClassName}`)}\n                    align={(value['cellConfigs'] && value['cellConfigs'].align) || \"left\"}\n                    style={{ width: width, paddingTop: paddingTopBottom, paddingBottom: paddingTopBottom, paddingLeft: paddingLeftRight, paddingRight: paddingLeftRight, borderBottom: borderBottom }}\n                    colSpan={((value['cellConfigs'] && value['cellConfigs'].colspan))}>\n                    {value[k]}\n                  </TableCell>\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function AccordionsCollapse(props) {\n  const {\n    id,\n    summary,\n    panelClassName,\n    panelSummaryClassName,\n    panelDetailClassName,\n    headerTooltip\n  } = props;\n\n  const [expanded, setExpanded] = React.useState(props.expanded ? id : false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const panelSummary = <ExpansionPanelSummary\n    expandIcon={<ExpandMoreIcon className={panelSummaryClassName} />}\n    aria-controls=\"panel1bh-content\"\n    id=\"panel1bh-header\">\n    {summary}\n  </ExpansionPanelSummary>\n\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === id}\n        onChange={handleChange(id)}\n        className={panelClassName}>\n        {headerTooltip ?\n          <Tooltip title={headerTooltip}>{panelSummary}</Tooltip> :\n          panelSummary}\n        <ExpansionPanelDetails\n          className={`${panelDetailClassName} p-0`}>\n          {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\nexport default function ModalDialog(props) {\n  const { open, scroll, title, onConfirm, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\">\n      {title && <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>}\n      <DialogContent dividers={scroll === 'paper'} className=\"mb-2\">\n        {props.children}\n      </DialogContent>\n      {onConfirm && <DialogActions>\n        <Button onClick={onConfirm} variant=\"outlined\">\n          Ok\n        </Button>\n      </DialogActions>}\n    </Dialog>\n  );\n}\n","import { Button, Grid, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport AccordionsCollapse from '../../../components/AccordionsCollapse';\nimport RegularTable from '../../../components/RegularTable';\nimport ModalDialog from '../../../components/ModalDialog';\n\nexport default function Lease(props) {\n  const { lease } = props;\n\n  const [showTos, setShowTos] = React.useState(false);\n\n  const tableHeadings = {\n    key: 'Key',\n    value: 'Value'\n  };\n  const tableValues = [\n    {\n      key: 'Lease Amount',\n      value: <Tooltip title=\"EVRs per Moment\"><span>{lease.leaseAmount}</span></Tooltip>\n    },\n    {\n      key: 'TOS',\n      value: <Tooltip title=\"Show Terms of Service\">\n        <Button className=\"tos-button\" size=\"small\" variant=\"outlined\" onClick={() => setShowTos(true)}>\n          {lease.halfTos}...\n        </Button>\n      </Tooltip>\n    }\n  ];\n\n  if (lease.outboundIP)\n    tableValues.push({\n      key: 'Outbound IP',\n      value: <Tooltip title=\"IP address for the instance's outbound connections\"><span>{lease.outboundIP.address}</span></Tooltip>\n    });\n\n  return (\n    <Grid item xs={12} className=\"pb-2\">\n      <AccordionsCollapse\n        id={lease.uriTokenId}\n        summary={<Typography className=\"text-truncate pl-2\" component={'span'}>\n          {lease.uriTokenId}</Typography>}\n        expanded=\"true\"\n        panelClassName=\"bg-unicorn text-light\"\n        panelSummaryClassName=\"text-light\"\n        panelDetailClassName=\"text-light overflow-auto\"\n        headerTooltip=\"URI Token Id\">\n        <Grid item xs={12}>\n          <RegularTable\n            className=\"bg-transparent rounded-0\"\n            cellClassName=\"text-light\"\n            headings={tableHeadings}\n            values={tableValues}\n            highlight={['value']}\n            hideHeadings />\n        </Grid>\n      </AccordionsCollapse>\n      <ModalDialog open={showTos} scroll=\"body\" onClose={() => setShowTos(false)}>\n        <div className=\"license\">\n          <object data={lease.tos} type=\"application/pdf\"\n            aria-label=\"EVERNODE HOSTING PRINCIPLES\"\n            style={{ width: '500px', height: '700px', display: 'block' }}\n            ></object>\n        </div>\n      </ModalDialog>\n    </Grid>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport Lease from './Lease';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport tosURL from '../../assets/data/tos.pdf'\n\nexport default function Leases(props) {\n  const { address } = props;\n\n  const [leases, setLeases] = React.useState(null);\n\n  const evernode = useEvernode();\n\n  useEffect(() => {\n    const fetchLeases = async () => {\n      setLeases(null);\n      const tos = tosURL;\n      const res = await evernode.getLeases(address);\n      const leaseData = res.map(l => {\n        const uriInfo = evernode.decodeLeaseUri(l.uri)\n        return {\n          ...l,\n          ...uriInfo,\n          tos: tos\n        }\n      }).sort((a,b) => a.leaseIndex - b.leaseIndex);\n      setLeases(leaseData);\n    }\n\n    fetchLeases();\n  }, [address, evernode]);\n\n  return (\n    <Fragment>\n      {(leases && (leases.length ? <Grid container>\n        {leases.map((lease, index) => {\n          return <Lease key={index} lease={lease} />\n        })}\n      </Grid> : <span>There're no available leases!</span>)) || <Loader />}\n    </Fragment>\n  );\n}\n","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Tooltip\n} from '@material-ui/core';\n\nimport Loader from '../../components/Loader';\n\nexport default function EvrBalance(props) {\n  const { balance } = props;\n\n  return (\n    <Card className=\"mt-1 bg-unicorn border-0 text-light\">\n      {((balance || balance === 0) && <Tooltip title=\"Total EVR balance\">\n        <CardContent className=\"pt-1 pb-1 text-center wallet-balance\">\n          <span className=\"font-weight-bold amount\">\n            {balance}\n          </span>\n          <span className=\"font-weight-normal ml-1 evr\">\n            EVR\n          </span>\n        </CardContent></Tooltip>) || <Loader className=\"mt-1 p-2\" size=\"1.5rem\" />}\n    </Card>\n  );\n}\n","import React, { Fragment, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport RegularTable from '../../components/RegularTable';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  TextField,\n  Button,\n  Hidden\n} from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Leases from '../../business-components/Leases';\n\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport { StorageKeys } from '../../common/constants';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport EvrBalance from '../../business-components/EvrBalance';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport ModalDialog from '../../components/ModalDialog';\nimport CopyBox from '../../components/CopyBox';\n\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: 'rgba(0,0,0,0.54)'\n    },\n    \"& label.Mui-error\": {\n      color: 'red'\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: 'rgba(0,0,0,0.87)'\n    },\n    \"& .MuiInput-underline.Mui-error:after\": {\n      borderBottomColor: '#f83245'\n    },\n    \"& label.MuiInputLabel-shrink\": {\n      transform: 'translate(0, 1.5px) scale(0.95)',\n      transformOrigin: 'top left'\n    }\n  }\n});\n\nexport default function Host(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const selfAddress = localStorage.getItem(StorageKeys.hostAddress);\n  const pathAddress = props.match.params.address;\n\n  const [address, setAddress] = React.useState(pathAddress || selfAddress);\n  const [inputAddress, setInputAddress] = React.useState(null);\n  const [info, setInfo] = React.useState(null);\n  const [showChangeAddress, setShowChangeAddress] = React.useState(false);\n\n  const inputAddressValid = useCallback(() => {\n    return /^r[a-zA-Z0-9]{24,34}$/g.test(inputAddress);\n  }, [inputAddress])\n\n  const handleChangeAddress = useCallback(() => {\n    if (inputAddress && inputAddressValid()) {\n      localStorage.setItem(StorageKeys.hostAddress, inputAddress);\n      setAddress(inputAddress);\n      setInputAddress(null);\n      setShowChangeAddress(false);\n    }\n  }, [inputAddress, inputAddressValid]);\n\n  const handleChangeAddressClose = useCallback(() => {\n    setShowChangeAddress(false);\n    setInputAddress(null);\n    // If the address change modal is closed without changing the address,\n    // Redirect to the home page.\n    if (!address)\n      history.push('/')\n  }, [address, history]);\n\n  const candidateRoute = function (address) {\n    history.push(`/candidate/${address}`);\n  };\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      setInfo(null);\n      const hosts = await evernode.getHosts({ address: address });\n      const config = await evernode.getConfigs();\n      const hostInfo = (hosts && hosts.length) ? hosts[0] : null;\n      const dudHostCandidates = await evernode.getDudHostCandidatesByOwner(address);\n      const candidate = await evernode.getCandidateByOwner(address);\n      const tableHeadings = {\n        key: 'Key',\n        value: 'Value'\n      }\n      let dudHostCandidateList = []\n      for (var dudHostCandidate of dudHostCandidates) {\n        dudHostCandidateList.push({\n          key: 'Id',\n          value: <Tooltip title=\"DudHost Candidate details\"><Button className=\"tos-button\" size=\"small\" variant=\"outlined\">{dudHostCandidate.id}...</Button></Tooltip>,\n        })\n      }\n      let tableValues = hostInfo ? [\n        {\n          key: 'Registration Token Id',\n          value: <Tooltip title=\"Registration token Id\"><span>{hostInfo.uriTokenId}</span></Tooltip>\n        },\n        {\n          key: 'Host Email',\n          value: <Tooltip title=\"Email address of the host owner\"><span>{hostInfo.email}</span></Tooltip>\n        },\n        {\n          key: 'Instances',\n          value:\n            <RegularTable\n              headings={{\n                toLet: 'To Let',\n                leased: 'Leased',\n                total: 'Total'\n              }}\n              isNested\n              hideHeadings\n              values={[\n                {\n                  toLet: 'To Let',\n                  leased: 'Leased',\n                  total: 'Total',\n                  cellConfigs: { align: 'center', paddingTopBottom: '8px' }\n                },\n                {\n                  toLet: <Tooltip title=\"Number of instances available for lease\">\n                    <span>\n                      {Math.max((hostInfo.maxInstances || 0) - (hostInfo.activeInstances || 0), 0)}\n                    </span>\n                  </Tooltip>,\n                  leased: <Tooltip title=\"Number of leased instances\">\n                    <span>\n                      {hostInfo.activeInstances || 0}\n                    </span>\n                  </Tooltip>,\n                  total: <Tooltip title=\"Number of total instances\">\n                    <span>\n                      {hostInfo.maxInstances || 0}\n                    </span>\n                  </Tooltip>,\n                  cellConfigs: { align: 'center', paddingTopBottom: '8px', borderBottom: '0' }\n                }\n              ]}\n            />,\n          cellConfigs: { paddingTopBottom: '0', paddingLeftRight: '0' }\n        },\n        {\n          key: 'CPU Model',\n          value: <CPUModel modelName={hostInfo.cpuModelName} speed={hostInfo.cpuMHz} count={hostInfo.cpuCount} showTooltip />\n        },\n        {\n          key: 'Instance Size',\n          value: <InstanceSpecs cpu={hostInfo.cpuMicrosec} ram={hostInfo.ramMb} disk={hostInfo.diskMb} instanceCount={hostInfo.maxInstances} showTooltip />\n        },\n        {\n          key: 'Last Heartbeat Index',\n          value: <Tooltip title={`${config.momentBaseInfo.momentType === 'ledger' ? 'Xahau Ledger' : 'Timestamp'} at which the last heartbeat was received`}><span>{hostInfo.lastHeartbeatIndex}</span></Tooltip>\n        },\n        {\n          key: 'Registered on Xahau Ledger',\n          value: <Tooltip title=\"Xahau Ledger at which the host registered\"><span>{hostInfo.registrationLedger}</span></Tooltip>\n        },\n        {\n          key: 'Registration Fee',\n          value: <Tooltip title=\"Registration fee (in EVRs) spent by the host\"><span>{hostInfo.registrationFee}</span></Tooltip>\n        },\n        {\n          key: 'Version',\n          value: <Tooltip title=\"Host's Sashimono version\"><span>{hostInfo.version}</span></Tooltip>\n        },\n        {\n          key: 'Registered on Timestamp',\n          value: <Tooltip title=\"Timestamp at which the host registered\"><span>{hostInfo.registrationTimestamp}</span></Tooltip>\n        },\n        {\n          key: 'Accumulated Reward Amount',\n          value: <Tooltip title=\"Rewards gained upto now\"><span>{hostInfo.accumulatedRewardAmount}</span></Tooltip>\n        },\n        {\n          key: 'Last Vote Timestamp',\n          value: <Tooltip title=\"Timestamp when the last vote has been sent\"><span>{hostInfo.lastVoteTimestamp}</span></Tooltip>\n        },\n        {\n          key: 'Host Reputation',\n          value: <Tooltip title=\"Reputation of the host that is considered in rewarding\"><span>{hostInfo.hostReputation}</span></Tooltip>\n        }\n      ] : [];\n      hostInfo && hostInfo.hostReputation==null && (tableValues = tableValues.filter(obj => obj.key !== 'Host Reputation')) ;\n      const evrBalance = await evernode.getEVRBalance(address);\n      setInfo({\n        evrBalance: evrBalance,\n        hostInfo: hostInfo,\n        tableHeadings: tableHeadings,\n        tableValues: tableValues,\n        dudHostCandidates: dudHostCandidates,\n        candidate: candidate\n      });\n    }\n\n    // If the path address param is empty this is My Host page and no address is set in local storage.\n    if (!address)\n      setShowChangeAddress(true);\n    else if (pathAddress === selfAddress)\n      history.push('/host');\n    else\n      fetchInfo();\n  }, [evernode, history, address, pathAddress, selfAddress]);\n\n  return (\n    <>{address &&\n      <Fragment>\n        <PageTitle\n          responsive={true}\n          titleHeading={\n            <div className=\"d-flex align-items-center display-7\">\n              <Hidden mdDown>\n                <span className=\"mr-2\">\n                  {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"1.8em\" />}\n                </span>\n              </Hidden>\n              {address}\n              {address === selfAddress &&\n                <Tooltip title=\"Change address\">\n                  <EditIcon className=\"ml-1 edit-btn\" onClick={() => setShowChangeAddress(true)} />\n                </Tooltip>}\n              <span>{info?.hostInfo &&\n                <Tooltip title={info.hostInfo.active ? 'Active' : 'Inactive'}>\n                  <div className={`ml-1 rounded-circle ${info.hostInfo.active ? 'online' : 'offline'}`}></div>\n                </Tooltip>}</span>\n            </div>\n          }\n          titleDescription={info ? (info?.hostInfo && <Typography type=\"p\">{info.hostInfo.domain}</Typography>) :\n            <Loader className=\"p-0\" size=\"1rem\" />}>\n          <Hidden mdUp>\n            <span>\n              {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"2.5em\" />}\n            </span>\n          </Hidden>\n          <EvrBalance balance={+(+info?.evrBalance).toFixed(3)} />\n        </PageTitle>\n        <Grid container spacing={4}>\n          {info && info.hostInfo && info.hostInfo.hostMessage ? (\n            <Grid item xs={12}>\n              <Card\n                style={{ border: \"none\", boxShadow: \"none\" }}\n                className=\"mb-4 bg-transparent\"\n              >\n                <CardContent className=\"p-0\">\n                  <div className=\"p-3 border rounded host-message mb-0\">\n                    {(info &&\n                      (info.hostInfo.hostMessage\n                        ? info.hostInfo.hostMessage\n                        : \"There is no host message available!\")) || (\n                        <Loader className=\"p-4\" />\n                      )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Registration Info\n                </h5>\n                {(info &&\n                  (info.hostInfo ? (\n                    <RegularTable\n                      headings={info.tableHeadings}\n                      values={info.tableValues}\n                      highlight={[\"key\"]}\n                      hideHeadings\n                    />\n                  ) : (\n                    <span>Host is not Registered!</span>\n                  ))) || <Loader className=\"p-4\" />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Available Leases\n                </h5>\n                {address && <Leases address={address} />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className='col'>\n              {info && info.candidate &&\n              <CardContent className=\"p-0 row\">\n                <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed New Hook Candidate\n                </h5>\n                <Card className=\"row copy-card p-2\">\n                  <CopyBox copyText={info.candidate.uniqueId}>\n                    <Button onClick={() => candidateRoute(info.candidate.uniqueId)}>{info.candidate.uniqueId}</Button>\n                  </CopyBox>\n                </Card>\n              </CardContent>\n              }\n              <CardContent className=\"p-0 row\">\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 && <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed Dud Host Reports\n                </h5>}\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 &&\n                info.dudHostCandidates.map((dudHostCandidate, i) => {\n                  return <><Card className=\"row copy-card p-2\">\n                    <CopyBox copyText={dudHostCandidate.uniqueId} key={i}>\n                      <Button onClick={() => candidateRoute(dudHostCandidate.uniqueId)}>{dudHostCandidate.uniqueId}</Button>\n                    </CopyBox>\n                  </Card>\n                    <br />\n                  </>\n                })\n                }\n              </CardContent>\n              <br />\n            </div>\n          </Grid>\n        </Grid>\n      </Fragment >}\n      {address === selfAddress && <ModalDialog open={showChangeAddress} scroll=\"body\" onClose={handleChangeAddressClose}>\n        <div>\n          <TextField autoFocus error={!!inputAddress && !inputAddressValid()} classes={classes} className=\"address-input\" variant=\"standard\" label=\"Enter the host Xahau address\" multiline value={inputAddress || ''} onChange={(e) => setInputAddress(e.target.value)} />\n        </div>\n        <div>\n          <Button onClick={handleChangeAddress} variant=\"outlined\" disabled={!inputAddress || !inputAddressValid()} className=\"pull-right mt-3\">OK</Button>\n        </div>\n      </ModalDialog>}</>\n  );\n}\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","concat","text","join","content","_jsx","Typography","className","children","Tooltip","title","CountryFlag","code","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","undefined","ISO3166_1","placement","ReactCountryFlag","style","fontSize","cursor","alt","svg","width","textAlign","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","copyText","iconSize","_useState","useState","_useState2","_slicedToArray","open","setOpen","Fragment","_jsxs","Button","onClick","e","stopPropagation","navigator","clipboard","writeText","setTimeout","DoneAll","color","FileCopyOutlined","RegularTable","headings","values","highlight","hideHeadings","cellClassName","headerCellClassName","isNested","keys","Object","TableContainer","component","Paper","boxShadow","borderRadius","Table","TableHead","TableRow","map","k","i","TableCell","includes","TableBody","value","length","colspan","paddingTopBottom","borderBottom","paddingLeftRight","isSubtopic","align","paddingTop","paddingBottom","paddingLeft","paddingRight","colSpan","AccordionsCollapse","panel","id","summary","panelClassName","panelSummaryClassName","panelDetailClassName","headerTooltip","_React$useState","React","expanded","_React$useState2","setExpanded","panelSummary","ExpansionPanelSummary","expandIcon","ExpandMoreIcon","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelDetails","ModalDialog","scroll","onConfirm","onClose","Dialog","DialogTitle","DialogContent","dividers","DialogActions","variant","Lease","lease","showTos","setShowTos","tableValues","key","leaseAmount","halfTos","outboundIP","address","Grid","item","xs","uriTokenId","data","tos","type","height","display","Leases","leases","setLeases","evernode","useEvernode","useEffect","fetchLeases","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","leaseData","wrap","_context","prev","next","tosURL","getLeases","sent","l","uriInfo","decodeLeaseUri","uri","_objectSpread","sort","a","b","leaseIndex","stop","apply","arguments","container","index","Loader","EvrBalance","balance","Card","CardContent","useStyles","makeStyles","root","borderBottomColor","transform","transformOrigin","Host","classes","history","useHistory","selfAddress","localStorage","getItem","pathAddress","match","params","setAddress","_React$useState3","_React$useState4","inputAddress","setInputAddress","_React$useState5","_React$useState6","info","setInfo","_React$useState7","_React$useState8","showChangeAddress","setShowChangeAddress","inputAddressValid","useCallback","test","handleChangeAddress","setItem","handleChangeAddressClose","candidateRoute","fetchInfo","hosts","config","hostInfo","dudHostCandidates","candidate","tableHeadings","dudHostCandidateList","_iterator","_step","evrBalance","getHosts","getConfigs","getDudHostCandidatesByOwner","getCandidateByOwner","_createForOfIteratorHelper","s","done","err","f","email","toLet","leased","total","cellConfigs","max","maxInstances","activeInstances","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","momentBaseInfo","momentType","lastHeartbeatIndex","registrationLedger","registrationFee","version","registrationTimestamp","accumulatedRewardAmount","lastVoteTimestamp","hostReputation","filter","obj","getEVRBalance","_Fragment","PageTitle","responsive","titleHeading","Hidden","mdDown","EditIcon","active","titleDescription","domain","mdUp","toFixed","spacing","hostMessage","border","md","uniqueId","TextField","autoFocus","error","label","multiline","target","disabled"],"sourceRoot":""}