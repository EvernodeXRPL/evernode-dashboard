{"version":3,"file":"static/js/232.e79ffb74.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/EvrBalance/index.js","business-components/InstanceSpecs/index.js","components/AccordionsCollapse/index.js","business-components/Leases/Lease/index.js","business-components/Leases/index.js","common/constants.js","components/CopyBox/index.js","components/ModalDialog/index.js","components/RegularTable/index.js","pages/Host/index.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\nimport ISO3166_1 from \"iso-3166-1\";\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  const isValidCountryCode = (code) => {\n    return ISO3166_1.whereAlpha2(code) !== undefined;\n  };\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  if (isValidCountryCode(countryCode)) {\n    return (\n      <StyledTooltip title={countryCode} placement='right-end'>\n        <div>\n          <ReactCountryFlag\n            className=\"emojiFlag\"\n            countryCode={countryCode}\n            style={{\n              fontSize: size,\n              cursor: 'pointer'\n            }}\n            aria-label={countryCode}\n            alt={countryCode}\n            svg\n          />\n        </div>\n      </StyledTooltip>\n    );\n  } else {\n    return (\n      <span style={{fontSize: \"24px\", width: \"42px\", textAlign: \"center\"}}>{countryCode}</span>\n    )\n  }\n}","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Tooltip\n} from '@material-ui/core';\n\nimport Loader from '../../components/Loader';\n\nexport default function EvrBalance(props) {\n  const { balance } = props;\n\n  return (\n    <Card className=\"mt-1 bg-unicorn border-0 text-light\">\n      {((balance || balance === 0) && <Tooltip title=\"Total EVR balance\">\n        <CardContent className=\"pt-1 pb-1 text-center wallet-balance\">\n          <span className=\"font-weight-bold amount\">\n            {balance}\n          </span>\n          <span className=\"font-weight-normal ml-1 evr\">\n            EVR\n          </span>\n        </CardContent></Tooltip>) || <Loader className=\"mt-1 p-2\" size=\"1.5rem\" />}\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function AccordionsCollapse(props) {\n  const {\n    id,\n    summary,\n    panelClassName,\n    panelSummaryClassName,\n    panelDetailClassName,\n    headerTooltip\n  } = props;\n\n  const [expanded, setExpanded] = React.useState(props.expanded ? id : false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const panelSummary = <ExpansionPanelSummary\n    expandIcon={<ExpandMoreIcon className={panelSummaryClassName} />}\n    aria-controls=\"panel1bh-content\"\n    id=\"panel1bh-header\">\n    {summary}\n  </ExpansionPanelSummary>\n\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === id}\n        onChange={handleChange(id)}\n        className={panelClassName}>\n        {headerTooltip ?\n          <Tooltip title={headerTooltip}>{panelSummary}</Tooltip> :\n          panelSummary}\n        <ExpansionPanelDetails\n          className={`${panelDetailClassName} p-0`}>\n          {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import { Button, Grid, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport AccordionsCollapse from '../../../components/AccordionsCollapse';\nimport RegularTable from '../../../components/RegularTable';\nimport ModalDialog from '../../../components/ModalDialog';\n\nexport default function Lease(props) {\n  const { lease } = props;\n\n  const [showTos, setShowTos] = React.useState(false);\n\n  const tableHeadings = {\n    key: 'Key',\n    value: 'Value'\n  };\n  const tableValues = [\n    {\n      key: 'Lease Amount',\n      value: <Tooltip title=\"EVRs per Moment\"><span>{lease.leaseAmount}</span></Tooltip>\n    },\n    {\n      key: 'TOS',\n      value: <Tooltip title=\"Show Terms of Service\">\n        <Button className=\"tos-button\" size=\"small\" variant=\"outlined\" onClick={() => setShowTos(true)}>\n          {lease.halfTos}...\n        </Button>\n      </Tooltip>\n    }\n  ];\n\n  return (\n    <Grid item xs={12} className=\"pb-2\">\n      <AccordionsCollapse\n        id={lease.nfTokenId}\n        summary={<Typography className=\"text-truncate pl-2\" component={'span'}>\n          {lease.nfTokenId}</Typography>}\n        expanded=\"true\"\n        panelClassName=\"bg-unicorn text-light\"\n        panelSummaryClassName=\"text-light\"\n        panelDetailClassName=\"text-light overflow-auto\"\n        headerTooltip=\"NFToken Id\">\n        <Grid item xs={12}>\n          <RegularTable\n            className=\"bg-transparent rounded-0\"\n            cellClassName=\"text-light\"\n            headings={tableHeadings}\n            values={tableValues}\n            highlight={['value']}\n            hideHeadings />\n        </Grid>\n      </AccordionsCollapse>\n      <ModalDialog open={showTos} scroll=\"body\" onClose={() => setShowTos(false)}>\n        <div className=\"license\">{lease.tos}</div>\n      </ModalDialog>\n    </Grid>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport Lease from './Lease';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\n\nexport default function Leases(props) {\n  const { address } = props;\n\n  const [leases, setLeases] = React.useState(null);\n\n  const evernode = useEvernode();\n\n  useEffect(() => {\n    const fetchLeases = async () => {\n      setLeases(null);\n      const tos = await evernode.getTos();\n      const res = await evernode.getLeases(address);\n      const leaseData = res.map(l => {\n        const uriInfo = evernode.decodeLeaseUri(l.uri)\n        return {\n          ...l,\n          ...uriInfo,\n          tos: tos\n        }\n      });\n      setLeases(leaseData);\n    }\n\n    fetchLeases();\n  }, [address, evernode]);\n\n  return (\n    <Fragment>\n      {(leases && (leases.length ? <Grid container>\n        {leases.map((lease, index) => {\n          return <Lease key={index} lease={lease} />\n        })}\n      </Grid> : <span>There're no available leases!</span>)) || <Loader />}\n    </Fragment>\n  );\n}\n","export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\nexport default function ModalDialog(props) {\n  const { open, scroll, title, onConfirm, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\">\n      {title && <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>}\n      <DialogContent dividers={scroll === 'paper'} className=\"mb-2\">\n        {props.children}\n      </DialogContent>\n      {onConfirm && <DialogActions>\n        <Button onClick={onConfirm} variant=\"outlined\">\n          Ok\n        </Button>\n      </DialogActions>}\n    </Dialog>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\n\nexport default function RegularTable(props) {\n  const {\n    headings,\n    values,\n    highlight,\n    hideHeadings,\n    className,\n    cellClassName,\n    headerCellClassName\n  } = props;\n\n  const keys = Object.keys(headings);\n  return (\n    <Fragment>\n      <TableContainer className={`${className}`} component={Paper}>\n        <Table aria-label=\"simple table\">\n          {!hideHeadings && <TableHead>\n            <TableRow>\n              {keys.map((k, i) => {\n                return <TableCell\n                  key={i}\n                  className={((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${headerCellClassName}`}>\n                  {headings[k]}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>}\n          <TableBody>\n            {/* Checking whether there is a non empty object - Object.keys(value).length !== 0*/}\n            {values.map(value => (Object.keys(value).length !== 0 &&\n              <TableRow key={value[keys[0]]}>\n                {keys.map((k, i) => {\n                  if (value['cellConfigs'] && i === (value['cellConfigs'].colspan) - 1)\n                    return null;\n                  let width;\n                  if (k === keys[0] && value['cellConfigs'] && value['cellConfigs'].width)\n                    width = value['cellConfigs'].width;\n                  let paddingTopBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].paddingTopBottom)\n                    paddingTopBottom = value['cellConfigs'].paddingTopBottom;\n                  return <TableCell\n                    key={i}\n                    className={(value['cellConfigs'] && value['cellConfigs'].isSubtopic) ? 'pt-3 pb-2' : (((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${cellClassName}`)}\n                    align=\"left\"\n                    style={{ width: width, paddingTop: paddingTopBottom, paddingBottom: paddingTopBottom }}\n                    colSpan={((value['cellConfigs'] && value['cellConfigs'].colspan))}>\n                    {value[k]}\n                  </TableCell>\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport RegularTable from '../../components/RegularTable';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  TextField,\n  Button,\n  Hidden\n} from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Leases from '../../business-components/Leases';\n\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport { StorageKeys } from '../../common/constants';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport EvrBalance from '../../business-components/EvrBalance';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport ModalDialog from '../../components/ModalDialog';\nimport CopyBox from '../../components/CopyBox';\n\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: 'rgba(0,0,0,0.54)'\n    },\n    \"& label.Mui-error\": {\n      color: 'red'\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: 'rgba(0,0,0,0.87)'\n    },\n    \"& .MuiInput-underline.Mui-error:after\": {\n      borderBottomColor: '#f83245'\n    },\n    \"& label.MuiInputLabel-shrink\": {\n      transform: 'translate(0, 1.5px) scale(0.95)',\n      transformOrigin: 'top left'\n    }\n  }\n});\n\nexport default function Host(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const selfAddress = localStorage.getItem(StorageKeys.hostAddress);\n  const pathAddress = props.match.params.address;\n\n  const [address, setAddress] = React.useState(pathAddress || selfAddress);\n  const [inputAddress, setInputAddress] = React.useState(null);\n  const [info, setInfo] = React.useState(null);\n  const [showChangeAddress, setShowChangeAddress] = React.useState(false);\n\n  const inputAddressValid = useCallback(() => {\n    return /^r[a-zA-Z0-9]{24,34}$/g.test(inputAddress);\n  }, [inputAddress])\n\n  const handleChangeAddress = useCallback(() => {\n    if (inputAddress && inputAddressValid()) {\n      localStorage.setItem(StorageKeys.hostAddress, inputAddress);\n      setAddress(inputAddress);\n      setInputAddress(null);\n      setShowChangeAddress(false);\n    }\n  }, [inputAddress, inputAddressValid]);\n\n  const handleChangeAddressClose = useCallback(() => {\n    setShowChangeAddress(false);\n    setInputAddress(null);\n    // If the address change modal is closed without changing the address,\n    // Redirect to the home page.\n    if (!address)\n      history.push('/')\n  }, [address, history]);\n\n  const candidateRoute = function (address) {\n    history.push(`/candidate/${address}`);\n  };\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      setInfo(null);\n      const hosts = await evernode.getHosts({ address: address });\n      const config = await evernode.getConfigs();\n      const hostInfo = (hosts && hosts.length) ? hosts[0] : null;\n      const dudHostCandidates = await evernode.getDudHostCandidatesByOwner(address);\n      const candidate = await evernode.getCandidateByOwner(address);\n      const tableHeadings = {\n        key: 'Key',\n        value: 'Value'\n      }\n      let dudHostCandidateList = []\n      for (var dudHostCandidate of dudHostCandidates) {\n        dudHostCandidateList.push({\n          key: 'Id',\n          value: <Tooltip title=\"DudHost Candidate details\"><Button className=\"tos-button\" size=\"small\" variant=\"outlined\">{dudHostCandidate.id}...</Button></Tooltip>,\n        })\n      }\n      let tableValues = hostInfo ? [\n        {\n          key: 'Registration Token Id',\n          value: <Tooltip title=\"Registration token Id\"><span>{hostInfo.uriTokenId}</span></Tooltip>\n        },\n        {\n          key: 'Host Email',\n          value: <Tooltip title=\"Email address of the host owner\"><span>{hostInfo.email}</span></Tooltip>\n        },\n        {\n          key: 'Instances',\n          value: <Tooltip title=\"Active instances out of Maximum instances\">\n            <span>{hostInfo.activeInstances || 0} out of {hostInfo.maxInstances || 0}</span>\n          </Tooltip>\n        },\n        {\n          key: 'CPU Model',\n          value: <CPUModel modelName={hostInfo.cpuModelName} speed={hostInfo.cpuMHz} count={hostInfo.cpuCount} showTooltip />\n        },\n        {\n          key: 'Instance Size',\n          value: <InstanceSpecs cpu={hostInfo.cpuMicrosec} ram={hostInfo.ramMb} disk={hostInfo.diskMb} instanceCount={hostInfo.maxInstances} showTooltip />\n        },\n        {\n          key: 'Last Heartbeat Index',\n          value: <Tooltip title={`${config.momentBaseInfo.momentType === 'ledger' ? 'XRP Ledger' : 'Timestamp'} at which the last heartbeat was received`}><span>{hostInfo.lastHeartbeatIndex}</span></Tooltip>\n        },\n        {\n          key: 'Registered on XRP Ledger',\n          value: <Tooltip title=\"XRP Ledger at which the host registered\"><span>{hostInfo.registrationLedger}</span></Tooltip>\n        },\n        {\n          key: 'Registration Fee',\n          value: <Tooltip title=\"Registration fee (in EVRs) spent by the host\"><span>{hostInfo.registrationFee}</span></Tooltip>\n        },\n        {\n          key: 'Version',\n          value: <Tooltip title=\"Host's Sashimono version\"><span>{hostInfo.version}</span></Tooltip>\n        },\n        {\n          key: 'Registered on Timestamp',\n          value: <Tooltip title=\"Timestamp at which the host registered\"><span>{hostInfo.registrationTimestamp}</span></Tooltip>\n        },\n        {\n          key: 'Accumulated Reward Amount',\n          value: <Tooltip title=\"Rewards gained upto now\"><span>{hostInfo.accumulatedRewardAmount}</span></Tooltip>\n        },\n        {\n          key: 'Last Vote Timestamp',\n          value: <Tooltip title=\"Timestamp when the last vote has been sent\"><span>{hostInfo.lastVoteTimestamp}</span></Tooltip>\n        }\n      ] : [];\n      const evrBalance = await evernode.getEVRBalance(address);\n      setInfo({\n        evrBalance: evrBalance,\n        hostInfo: hostInfo,\n        tableHeadings: tableHeadings,\n        tableValues: tableValues,\n        dudHostCandidates: dudHostCandidates,\n        candidate: candidate\n      });\n    }\n\n    // If the path address param is empty this is My Host page and no address is set in local storage.\n    if (!address)\n      setShowChangeAddress(true);\n    else if (pathAddress === selfAddress)\n      history.push('/host');\n    else\n      fetchInfo();\n  }, [evernode, history, address, pathAddress, selfAddress]);\n\n  return (\n    <>{address &&\n      <Fragment>\n        <PageTitle\n          responsive={true}\n          titleHeading={\n            <div className=\"d-flex align-items-center display-7\">\n              <Hidden mdDown>\n                <span className=\"mr-2\">\n                  {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"1.8em\" />}\n                </span>\n              </Hidden>\n              {address}\n              {address === selfAddress &&\n                <Tooltip title=\"Change address\">\n                  <EditIcon className=\"ml-1 edit-btn\" onClick={() => setShowChangeAddress(true)} />\n                </Tooltip>}\n              <span>{info?.hostInfo &&\n                <Tooltip title={info.hostInfo.active ? 'Active' : 'Inactive'}>\n                  <div className={`ml-1 rounded-circle ${info.hostInfo.active ? 'online' : 'offline'}`}></div>\n                </Tooltip>}</span>\n            </div>\n          }\n          titleDescription={info ? (info?.hostInfo && <Typography type=\"p\">{info.hostInfo.domain}</Typography>) :\n            <Loader className=\"p-0\" size=\"1rem\" />}>\n          <Hidden mdUp>\n            <span>\n              {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"2.5em\" />}\n            </span>\n          </Hidden>\n          <EvrBalance balance={+(+info?.evrBalance).toFixed(3)} />\n        </PageTitle>\n        <Grid container spacing={4}>\n          {info && info.hostInfo && info.hostInfo.hostMessage ? (\n            <Grid item xs={12}>\n              <Card\n                style={{ border: \"none\", boxShadow: \"none\" }}\n                className=\"mb-4 bg-transparent\"\n              >\n                <CardContent className=\"p-0\">\n                  <div className=\"p-3 border rounded host-message mb-0\">\n                    {(info &&\n                      (info.hostInfo.hostMessage\n                        ? info.hostInfo.hostMessage\n                        : \"There is no host message available!\")) || (\n                        <Loader className=\"p-4\" />\n                      )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Registration Info\n                </h5>\n                {(info &&\n                  (info.hostInfo ? (\n                    <RegularTable\n                      headings={info.tableHeadings}\n                      values={info.tableValues}\n                      highlight={[\"key\"]}\n                      hideHeadings\n                    />\n                  ) : (\n                    <span>Host is not Registered!</span>\n                  ))) || <Loader className=\"p-4\" />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Available Leases\n                </h5>\n                {address && <Leases address={address} />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className='col'>\n              {info && info.candidate &&\n              <CardContent className=\"p-0 row\">\n                <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed New Hook Candidate\n                </h5>\n                <Card className=\"row copy-card p-2\">\n                  <CopyBox copyText={info.candidate.uniqueId}>\n                    <Button onClick={() => candidateRoute(info.candidate.uniqueId)}>{info.candidate.uniqueId}</Button>\n                  </CopyBox>\n                </Card>\n              </CardContent>\n              }\n              <CardContent className=\"p-0 row\">\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 && <h5 className=\"card-title font-weight-bold font-size-md pt-3\">\n                  Proposed Dud Host Reports\n                </h5>}\n                {info && info.dudHostCandidates && info.dudHostCandidates.length > 0 &&\n                info.dudHostCandidates.map((dudHostCandidate, i) => {\n                  return <><Card className=\"row copy-card p-2\">\n                    <CopyBox copyText={dudHostCandidate.uniqueId} key={i}>\n                      <Button onClick={() => candidateRoute(dudHostCandidate.uniqueId)}>{dudHostCandidate.uniqueId}</Button>\n                    </CopyBox>\n                  </Card>\n                    <br />\n                  </>\n                })\n                }\n              </CardContent>\n              <br />\n            </div>\n          </Grid>\n        </Grid>\n      </Fragment >}\n      {address === selfAddress && <ModalDialog open={showChangeAddress} scroll=\"body\" onClose={handleChangeAddressClose}>\n        <div>\n          <TextField autoFocus error={!!inputAddress && !inputAddressValid()} classes={classes} className=\"address-input\" variant=\"standard\" label=\"Enter the host XRP address\" multiline value={inputAddress || ''} onChange={(e) => setInputAddress(e.target.value)} />\n        </div>\n        <div>\n          <Button onClick={handleChangeAddress} variant=\"outlined\" disabled={!inputAddress || !inputAddressValid()} className=\"pull-right mt-3\">OK</Button>\n        </div>\n      </ModalDialog>}</>\n  );\n}\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","code","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","undefined","ISO3166_1","placement","style","fontSize","cursor","alt","svg","width","textAlign","EvrBalance","balance","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","AccordionsCollapse","panel","id","summary","panelClassName","panelSummaryClassName","panelDetailClassName","headerTooltip","React","expanded","setExpanded","panelSummary","ExpansionPanelSummary","expandIcon","ExpandMore","Fragment","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelDetails","children","Lease","lease","showTos","setShowTos","tableValues","key","value","leaseAmount","Button","variant","onClick","halfTos","Grid","item","xs","nfTokenId","Typography","component","RegularTable","cellClassName","headings","values","highlight","hideHeadings","ModalDialog","open","scroll","onClose","tos","Leases","address","leases","setLeases","evernode","useEvernode","useEffect","fetchLeases","getTos","getLeases","res","leaseData","map","l","uriInfo","decodeLeaseUri","uri","length","container","index","StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","copyText","iconSize","useState","setOpen","e","stopPropagation","navigator","clipboard","writeText","setTimeout","color","onConfirm","dividers","headerCellClassName","keys","Object","Paper","k","i","includes","colspan","paddingTopBottom","isSubtopic","align","paddingTop","paddingBottom","colSpan","useStyles","makeStyles","root","borderBottomColor","transform","transformOrigin","Host","classes","history","useHistory","selfAddress","localStorage","getItem","pathAddress","match","params","setAddress","inputAddress","setInputAddress","info","setInfo","showChangeAddress","setShowChangeAddress","inputAddressValid","useCallback","test","handleChangeAddress","setItem","handleChangeAddressClose","candidateRoute","fetchInfo","getHosts","hosts","getConfigs","config","hostInfo","getDudHostCandidatesByOwner","dudHostCandidates","getCandidateByOwner","candidate","tableHeadings","dudHostCandidateList","uriTokenId","email","activeInstances","maxInstances","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","momentBaseInfo","momentType","lastHeartbeatIndex","registrationLedger","registrationFee","version","registrationTimestamp","accumulatedRewardAmount","lastVoteTimestamp","getEVRBalance","evrBalance","responsive","titleHeading","mdDown","active","titleDescription","type","domain","mdUp","toFixed","spacing","hostMessage","border","boxShadow","md","uniqueId","autoFocus","error","label","multiline","target","disabled"],"sourceRoot":""}