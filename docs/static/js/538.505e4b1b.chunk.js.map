{"version":3,"file":"static/js/538.505e4b1b.chunk.js","mappings":"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","sources":["common/constants.js","components/CopyBox/index.js","components/CustomTable/index.js","components/Label/LabelText.js","pages/Candidates/index.js","../node_modules/@material-ui/core/esm/Badge/Badge.js"],"sourcesContent":["export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Snackbar, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title=\"Copy to clipboard\" className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />\n          </Button>\n        </Tooltip>\n        <Snackbar\n          open={open}\n          onClose={handleClose}\n          autoHideDuration={1000}\n          anchorOrigin={{\n            horizontal: 'center', vertical: 'top'\n          }}\n          message=\"Copied to clipboard\"\n          className=\"alert\"\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick,\n    blurTable\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className={`table table-striped  text-nowrap mb-0 ${blurTable ? 'table-blur' : 'table-hover'}`}>\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.length > 0 ? values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                )) : <tr><td colSpan={keys.length} className=\"text-center\">No data to show</td></tr>}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React from 'react'\n\nconst LabelText = ({ children, labelType }) => {\n    return (\n        <div className={`h-auto py-1 badge badge-${labelType}`} style={{ width: '4.5rem', fontSize: '0.75rem', textAlign: 'center' }}>\n            {children}\n        </div>\n    )\n}\n\nexport default LabelText","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Badge, Button } from '@material-ui/core';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport LabelText from '../../components/Label/LabelText'\nimport { CandidateType } from \"../../common/constants\"\nimport CopyBox from '../../components/CopyBox';\n\nconst PAGE_SIZE = 10;\n\nconst Candidates = () => {\n    const history = useHistory();\n    const evernode = useEvernode();\n\n    const [candidates, setCandidates] = useState(null);\n    const [nextPageToken, setNextPageToken] = useState(null);\n    const [pageQueue, setPageQueue] = useState([]);\n    const [isCandidatesLoading, setIsCandidatesLoading] = useState(false);\n\n    const updateCandidateType = useCallback(async (candidate) => {\n        const candidateType = await evernode.getCandidateType(candidate.id);\n        return { ...candidate, candidateType };\n    }, [evernode]);\n\n    const loadCandidates = useCallback(async (pageToken = null) => {\n        const data = await evernode.getCandidates(null, PAGE_SIZE, pageToken);\n        let candidateList;\n        if (data.nextPageToken) {\n            candidateList = data.data;\n            setNextPageToken(data.nextPageToken);\n        }\n        else {\n            candidateList = data;\n            setNextPageToken(null);\n        }\n\n        const updatedCandidateList = await Promise.all(candidateList.map(updateCandidateType));\n\n        const tableColumns = {\n            candidateId: { title: \"Candidate ID\", className: 'text-start' },\n            candidateStatus: { title: \"Status\", className: 'text-center' },\n            positiveVoteCount: { title: \"Positive Vote Count\", className: 'text-center col-fixed-mw' },\n            proposalFee: { title: \"Proposal Fee (EVRs)\", className: 'text-center col-fixed-mw' },\n            foundationVoteStatus: { title: \"Foundation Vote Status\", className: 'text-center' },\n            candidateType: { title: \"Candidate Type\", className: 'text-center' },\n        };\n        const tableValues = updatedCandidateList.map((candidate) => {\n\n            return {\n                key: candidate.uniqueId,\n                candidateId: <div className=\"d-flex align-items-center\">\n                    <CopyBox copyText={candidate.uniqueId} iconSize=\"16\">\n                        <p className=\"font-weight-bold m-0\">\n                            {candidate.uniqueId}\n                        </p>\n                    </CopyBox>\n                </div>,\n                candidateStatus: candidate.status === \"supported\" ?\n                    <LabelText labelType=\"success\">\n                        Supported\n                    </LabelText> : candidate.status === \"elected\" ?\n                        <LabelText labelType=\"primary\">\n                            Elected\n                        </LabelText> : candidate.status === \"vetoed\" ?\n                            <LabelText labelType=\"danger\">\n                                Vetoed\n                            </LabelText> : candidate.status === \"expired\" ?\n                                <LabelText labelType=\"dark\">\n                                    Expired\n                                </LabelText> : <LabelText labelType=\"warning\">\n                                    Rejected\n                                </LabelText>,\n                positiveVoteCount: <div>{candidate.positiveVoteCount}</div>,\n                proposalFee: <div>{candidate.proposalFee}</div>,\n                foundationVoteStatus: candidate.foundationVoteStatus === \"supported\" ?\n                    <LabelText labelType=\"success\">\n                        Supported\n                    </LabelText> : <LabelText labelType=\"warning\">\n                        Rejected\n                    </LabelText>,\n                candidateType: <Badge badgeContent={candidate.candidateType === 1 ? CandidateType.newHookCandidate : candidate.candidateType === 2 ? CandidateType.pilotedModeCandidate : CandidateType.dudHostCandidate}></Badge>,\n            }\n        });\n\n        setCandidates({\n            candidates: updatedCandidateList,\n            tableColumns: tableColumns,\n            tableValues: tableValues\n        });\n\n        setIsCandidatesLoading(false);\n    }, [evernode, updateCandidateType]);\n\n    useEffect(() => {\n        loadCandidates();\n    }, [loadCandidates]);\n\n    const handleRowClick = useCallback((e) => {\n        if (isCandidatesLoading)\n            return;\n        history.push(`/candidate/${e.key}`);\n    }, [history, isCandidatesLoading]);\n\n    const handleNextClick = useCallback(() => {\n        setIsCandidatesLoading(true);\n        setPageQueue([...pageQueue, nextPageToken]);\n        loadCandidates(nextPageToken);\n    }, [loadCandidates, pageQueue, nextPageToken]);\n\n    const handlePrevClick = useCallback(() => {\n        setIsCandidatesLoading(true);\n        const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n        setPageQueue(pageQueue.slice(0, pageQueue.length - 1));\n        loadCandidates(prevPageToken);\n    }, [loadCandidates, pageQueue]);\n\n    return (\n        <Fragment>\n            <PageTitle\n                titleHeading=\"Candidates\"\n            />\n            {isCandidatesLoading && <Loader className={`hostsLoader \"p-4\"`} />}\n            {(candidates && <div>\n                <CustomTable columns={candidates.tableColumns} values={candidates.tableValues} blurTable={isCandidatesLoading} onRowClick={handleRowClick} />\n                <div>\n                    {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" disabled={isCandidatesLoading} onClick={handlePrevClick}>Prev</Button>}\n                    {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" disabled={isCandidatesLoading} onClick={handleNextClick}>Next</Button>}\n                </div>\n            </div>)}\n        </Fragment>\n    )\n}\n\nexport default Candidates","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginTopRightRectangle: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomRightRectangle: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginTopLeftRectangle: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomLeftRectangle: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n    anchorOriginTopRightCircle: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n    anchorOriginBottomRightCircle: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n    anchorOriginTopLeftCircle: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n    anchorOriginBottomLeftCircle: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\nvar Badge = React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[\"\".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), \"}\")], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible, {\n      dot: classes.dot\n    }[variant])\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);"],"names":["StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","props","copyText","iconSize","useState","open","setOpen","Fragment","className","children","title","onClick","e","stopPropagation","navigator","clipboard","writeText","style","fontSize","onClose","event","reason","autoHideDuration","anchorOrigin","horizontal","vertical","message","CustomTable","columns","values","hideHeadings","onRowClick","blurTable","keys","Object","map","k","i","length","value","cursor","j","colSpan","labelType","width","textAlign","history","useHistory","evernode","useEvernode","candidates","setCandidates","nextPageToken","setNextPageToken","pageQueue","setPageQueue","isCandidatesLoading","setIsCandidatesLoading","updateCandidateType","useCallback","candidate","getCandidateType","id","candidateType","loadCandidates","pageToken","getCandidates","data","candidateList","Promise","all","updatedCandidateList","tableColumns","candidateId","candidateStatus","positiveVoteCount","proposalFee","foundationVoteStatus","tableValues","key","uniqueId","status","badgeContent","useEffect","handleRowClick","push","handleNextClick","handlePrevClick","prevPageToken","slice","titleHeading","variant","disabled","Badge","React","ref","_props$anchorOrigin","classes","_props$color","color","_props$component","component","ComponentProp","invisibleProp","invisible","_props$max","max","_props$overlap","overlap","_props$showZero","showZero","_props$variant","other","_objectWithoutProperties","displayValue","concat","_extends","clsx","root","badge","capitalize","dot","withStyles","theme","position","display","verticalAlign","flexShrink","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","backgroundColor","palette","primary","main","contrastText","colorSecondary","secondary","colorError","error","RADIUS_DOT","anchorOriginTopRightRectangle","top","right","transform","transformOrigin","anchorOriginBottomRightRectangle","bottom","anchorOriginTopLeftRectangle","left","anchorOriginBottomLeftRectangle","anchorOriginTopRightCircle","anchorOriginBottomRightCircle","anchorOriginTopLeftCircle","anchorOriginBottomLeftCircle","leavingScreen","name"],"sourceRoot":""}