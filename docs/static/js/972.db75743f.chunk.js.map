{"version":3,"file":"static/js/972.db75743f.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","components/CopyBox/index.js","components/CustomTable/index.js","pages/Hosts/index.js","../node_modules/@material-ui/icons/Message.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\nimport ISO3166_1 from \"iso-3166-1\";\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  const isValidCountryCode = (code) => {\n    return ISO3166_1.whereAlpha2(code) !== undefined;\n  };\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  if (isValidCountryCode(countryCode)) {\n    return (\n      <StyledTooltip title={countryCode} placement='right-end'>\n        <div>\n          <ReactCountryFlag\n            className=\"emojiFlag\"\n            countryCode={countryCode}\n            style={{\n              fontSize: size,\n              cursor: 'pointer'\n            }}\n            aria-label={countryCode}\n            alt={countryCode}\n            svg\n          />\n        </div>\n      </StyledTooltip>\n    );\n  } else {\n    return (\n      <span style={{fontSize: \"24px\", width: \"42px\", textAlign: \"center\"}}>{countryCode}</span>\n    )\n  }\n}","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick,\n    blurTable\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className={`table table-striped  text-nowrap mb-0 ${blurTable ? 'table-blur' : 'table-hover'}`}>\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.length > 0 ? values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                )) : <tr><td colSpan={keys.length} className=\"text-center\">No data to show</td></tr>}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport CopyBox from '../../components/CopyBox';\n\nconst PAGE_SIZE = 10;\n\nexport default function Hosts() {\n  const history = useHistory();\n  const evernode = useEvernode();\n  const {nextPageToken, updateNextPageToken, pageQueue, updatePageQueue} = useEvernode();\n\n  const [hosts, setHosts] = useState(null);\n  const [isHostsLoading, setIsHostsLoading] = useState(false);\n\n  const loadHosts = useCallback(async (pageToken = null) => {\n    const data = await evernode.getHosts(null, PAGE_SIZE, pageToken);\n    let hostList;\n    if (data.nextPageToken) {\n      hostList = data.data;\n      updateNextPageToken(data.nextPageToken);\n    }\n    else {\n      hostList = data;\n      updateNextPageToken(null);\n    }\n\n    const tableColumns = {\n      address: { title: \"Address\", className: 'text-start' },\n      status: { title: \"Status\", className: 'text-center' },\n      cpuModel: { title: \"CPU Model\", className: 'text-center col-fixed-mw' },\n      instanceSize: { title: \"Instance Size\", className: 'text-center col-fixed-mw' },\n      maxInstances: { title: \"Max Instances\", className: 'text-center' },\n      activeInstances: { title: \"Active Instances\", className: 'text-center' }\n    };\n    const tableValues = hostList.map(host => {\n      return {\n        key: host.address,\n        address: <div className=\"d-flex align-items-center\">\n          <CountryFlag countryCode={host.countryCode} size=\"3em\" />\n          <div className=\"ml-3\">\n            <CopyBox copyText={host.address} iconSize=\"16\">\n              <p className=\"font-weight-bold m-0\">\n                {host.address}\n                {host.hostMessage ? (\n                  <MessageIcon className=\"host-message-icon\" fontSize=\"small\" />\n                ) : null}\n              </p>\n            </CopyBox>\n            <span className=\"text-black-50 d-block py-1\">\n              {\n                host.version &&\n                <span className=\"text-span\">v{host.version} | </span>\n              }\n              {\n                host.domain &&\n                <span>{host.domain}</span>\n              }\n            </span>\n          </div>\n        </div>,\n        status: host.active ?\n          <div className=\"h-auto py-2 badge badge-success\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Active\n          </div> :\n          <div className=\"h-auto py-2 badge badge-warning\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Inactive\n          </div>,\n        cpuModel: <CPUModel modelName={host.cpuModelName} speed={host.cpuMHz} count={host.cpuCount} />,\n        instanceSize: <InstanceSpecs cpu={host.cpuMicrosec} ram={host.ramMb} disk={host.diskMb} instanceCount={host.maxInstances} />,\n        maxInstances: host.maxInstances || 0,\n        activeInstances: host.activeInstances || 0\n      }\n    });\n\n    setHosts({\n      hosts: hostList,\n      tableColumns: tableColumns,\n      tableValues: tableValues\n    });\n\n    setIsHostsLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (pageQueue.length > 0)\n      loadHosts(pageQueue[pageQueue.length - 1]);\n    else\n      loadHosts();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts]);\n\n  const handleRowClick = useCallback((e) => {\n    if (isHostsLoading)\n      return;\n    history.push(`/host/${e.key}`);\n  }, [history, isHostsLoading]);\n\n  const handleNextClick = useCallback(() => {\n    setIsHostsLoading(true);\n    updatePageQueue([...pageQueue,nextPageToken]);\n    loadHosts(nextPageToken);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts, pageQueue, nextPageToken]);\n\n  const handlePrevClick = useCallback(() => {\n    setIsHostsLoading(true);\n    const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n    updatePageQueue(pageQueue.slice(0, pageQueue.length - 1));\n    loadHosts(prevPageToken);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts, pageQueue]);\n\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Hosts\"\n      />\n      {isHostsLoading && <Loader className={`hostsLoader \"p-4\"`} />}\n      {(hosts && <div>\n        <CustomTable columns={hosts.tableColumns} values={hosts.tableValues} blurTable={isHostsLoading} onRowClick={handleRowClick} />\n        <div>\n          {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" disabled={isHostsLoading} onClick={handlePrevClick}>Prev</Button>}\n          {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" disabled={isHostsLoading} onClick={handleNextClick}>Next</Button>}\n        </div>\n      </div>)}\n    </Fragment>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');\n\nexports.default = _default;"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","concat","text","join","content","_jsx","Typography","className","children","Tooltip","title","CountryFlag","code","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","undefined","ISO3166_1","placement","ReactCountryFlag","style","fontSize","cursor","alt","svg","width","textAlign","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","CopyBox","copyText","iconSize","_useState","useState","_useState2","_slicedToArray","open","setOpen","Fragment","_jsxs","Button","onClick","e","stopPropagation","navigator","clipboard","writeText","setTimeout","DoneAll","color","FileCopyOutlined","CustomTable","columns","values","hideHeadings","onRowClick","blurTable","keys","Object","Card","CardContent","map","k","i","length","value","j","colSpan","PAGE_SIZE","Hosts","history","useHistory","evernode","useEvernode","_useEvernode","nextPageToken","updateNextPageToken","pageQueue","updatePageQueue","hosts","setHosts","_useState3","_useState4","isHostsLoading","setIsHostsLoading","loadHosts","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pageToken","data","hostList","tableColumns","tableValues","_args","arguments","wrap","_context","prev","next","getHosts","sent","address","status","cpuModel","instanceSize","maxInstances","activeInstances","host","key","hostMessage","MessageIcon","version","domain","active","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","stop","useEffect","handleRowClick","handleNextClick","_toConsumableArray","handlePrevClick","prevPageToken","slice","PageTitle","titleHeading","Loader","variant","disabled","_interopRequireDefault","require","exports","_react","_default","default","createElement","d"],"sourceRoot":""}