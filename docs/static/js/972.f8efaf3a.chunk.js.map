{"version":3,"file":"static/js/972.f8efaf3a.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","components/CopyBox/index.js","components/CustomTable/index.js","pages/Hosts/index.js","../node_modules/@material-ui/icons/Message.js","../node_modules/react-country-flag/src/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  return (\n    <StyledTooltip title={countryCode} placement='right-end'>\n      <div>\n        <ReactCountryFlag\n          className=\"emojiFlag\"\n          countryCode={countryCode}\n          style={{\n            fontSize: size,\n            cursor: 'pointer'\n          }}\n          aria-label={countryCode}\n          alt={countryCode}\n          svg\n        />\n      </div>\n    </StyledTooltip>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Snackbar, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title=\"Copy to clipboard\" className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />\n          </Button>\n        </Tooltip>\n        <Snackbar\n          open={open}\n          onClose={handleClose}\n          autoHideDuration={1000}\n          anchorOrigin={{\n            horizontal: 'center', vertical: 'top'\n          }}\n          message=\"Copied to clipboard\"\n          className=\"alert\"\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick,\n    blurTable\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className={`table table-striped  text-nowrap mb-0 ${blurTable ? 'table-blur' : 'table-hover'}`}>\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.length > 0 ? values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                )) : <tr><td colSpan={keys.length} className=\"text-center\">No data to show</td></tr>}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport CopyBox from '../../components/CopyBox';\n\nconst PAGE_SIZE = 10;\n\nexport default function Hosts() {\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const [hosts, setHosts] = useState(null);\n  const [nextPageToken, setNextPageToken] = useState(null);\n  const [pageQueue, setPageQueue] = useState([]);\n  const [isHostsLoading, setIsHostsLoading] = useState(false);\n\n  const loadHosts = useCallback(async (pageToken = null) => {\n    const data = await evernode.getHosts(null, PAGE_SIZE, pageToken);\n    let hostList;\n    if (data.nextPageToken) {\n      hostList = data.data;\n      setNextPageToken(data.nextPageToken);\n    }\n    else {\n      hostList = data;\n      setNextPageToken(null);\n    }\n\n    const tableColumns = {\n      address: { title: \"Address\", className: 'text-start' },\n      status: { title: \"Status\", className: 'text-center' },\n      cpuModel: { title: \"CPU Model\", className: 'text-center col-fixed-mw' },\n      instanceSize: { title: \"Instance Size\", className: 'text-center col-fixed-mw' },\n      maxInstances: { title: \"Max Instances\", className: 'text-center' },\n      activeInstances: { title: \"Active Instances\", className: 'text-center' }\n    };\n    const tableValues = hostList.map(host => {\n      return {\n        key: host.address,\n        address: <div className=\"d-flex align-items-center\">\n          <CountryFlag countryCode={host.countryCode} size=\"3em\" />\n          <div className=\"ml-3\">\n            <CopyBox copyText={host.address} iconSize=\"16\">\n              <p className=\"font-weight-bold m-0\">\n                {host.address}\n                {host.hostMessage ? (\n                  <MessageIcon className=\"host-message-icon\" fontSize=\"small\" />\n                ) : null}\n              </p>\n            </CopyBox>\n            <span className=\"text-black-50 d-block py-1\">\n              {\n                host.version &&\n                <span className=\"text-span\">v{host.version} | </span>\n              }\n              {\n                host.domain &&\n                <span>{host.domain}</span>\n              }\n            </span>\n          </div>\n        </div>,\n        status: host.active ?\n          <div className=\"h-auto py-2 badge badge-success\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Active\n          </div> :\n          <div className=\"h-auto py-2 badge badge-warning\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Inactive\n          </div>,\n        cpuModel: <CPUModel modelName={host.cpuModelName} speed={host.cpuMHz} count={host.cpuCount} />,\n        instanceSize: <InstanceSpecs cpu={host.cpuMicrosec} ram={host.ramMb} disk={host.diskMb} instanceCount={host.maxInstances} />,\n        maxInstances: host.maxInstances || 0,\n        activeInstances: host.activeInstances || 0\n      }\n    });\n\n    setHosts({\n      hosts: hostList,\n      tableColumns: tableColumns,\n      tableValues: tableValues\n    });\n\n    setIsHostsLoading(false);\n  }, [evernode]);\n\n  useEffect(() => {\n    loadHosts();\n  }, [loadHosts]);\n\n  const handleRowClick = useCallback((e) => {\n    if (isHostsLoading)\n      return;\n    history.push(`/host/${e.key}`);\n  }, [history, isHostsLoading]);\n\n  const handleNextClick = useCallback(() => {\n    setIsHostsLoading(true);\n    setPageQueue([...pageQueue, nextPageToken]);\n    loadHosts(nextPageToken);\n  }, [loadHosts, pageQueue, nextPageToken]);\n\n  const handlePrevClick = useCallback(() => {\n    setIsHostsLoading(true);\n    const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n    setPageQueue(pageQueue.slice(0, pageQueue.length - 1));\n    loadHosts(prevPageToken);\n  }, [loadHosts, pageQueue]);\n\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Hosts\"\n      />\n      {isHostsLoading && <Loader className={`hostsLoader \"p-4\"`} />}\n      {(hosts && <div>\n        <CustomTable columns={hosts.tableColumns} values={hosts.tableValues} blurTable={isHostsLoading} onRowClick={handleRowClick} />\n        <div>\n          {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" disabled={isHostsLoading} onClick={handlePrevClick}>Prev</Button>}\n          {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" disabled={isHostsLoading} onClick={handleNextClick}>Next</Button>}\n        </div>\n      </div>)}\n    </Fragment>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');\n\nexports.default = _default;","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","placement","style","fontSize","cursor","alt","svg","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","CopyBox","copyText","iconSize","useState","open","setOpen","Fragment","children","onClick","e","stopPropagation","navigator","clipboard","writeText","onClose","event","reason","autoHideDuration","anchorOrigin","horizontal","vertical","message","CustomTable","columns","values","hideHeadings","onRowClick","blurTable","keys","Object","map","k","i","length","value","j","colSpan","Hosts","history","useHistory","evernode","useEvernode","hosts","setHosts","nextPageToken","setNextPageToken","pageQueue","setPageQueue","isHostsLoading","setIsHostsLoading","loadHosts","useCallback","pageToken","getHosts","data","hostList","tableColumns","address","status","cpuModel","instanceSize","maxInstances","activeInstances","tableValues","host","key","hostMessage","version","domain","active","width","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","useEffect","handleRowClick","handleNextClick","handlePrevClick","prevPageToken","slice","titleHeading","variant","disabled","_interopRequireDefault","require","exports","_react","_default","default","createElement","d","cdnSuffix","DEFAULT_CDN_SUFFIX","cdnUrl","DEFAULT_CDN_URL","_ref$svg","flagUrl","toLowerCase","React","src","display","height","verticalAlign","emoji","toUpperCase","replace","String","fromCodePoint","char","charCodeAt","role","lineHeight"],"sourceRoot":""}