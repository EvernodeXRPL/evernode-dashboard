{"version":3,"file":"static/js/715.c401079e.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","components/CustomTable/index.js","pages/Hosts/index.js","../node_modules/@material-ui/icons/Message.js","../node_modules/react-country-flag/src/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  return (\n    <StyledTooltip title={countryCode} placement='right-end'>\n      <div>\n        <ReactCountryFlag\n          className=\"emojiFlag\"\n          countryCode={countryCode}\n          style={{\n            fontSize: size,\n            cursor: 'pointer'\n          }}\n          aria-label={countryCode}\n          alt={countryCode}\n          svg\n        />\n      </div>\n    </StyledTooltip>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped table-hover text-nowrap mb-0\">\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\n\nconst PAGE_SIZE = 10;\n\nexport default function Hosts() {\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const [hosts, setHosts] = useState(null);\n  const [nextPageToken, setNextPageToken] = useState(null);\n  const [pageQueue, setPageQueue] = useState([]);\n\n  const loadHosts = useCallback(async (pageToken = null) => {\n    const data = await evernode.getHosts(null, PAGE_SIZE, pageToken);\n    let hostList;\n    if (data.nextPageToken) {\n      hostList = data.data;\n      setNextPageToken(data.nextPageToken);\n    }\n    else {\n      hostList = data;\n      setNextPageToken(null);\n    }\n\n    const tableColumns = {\n      address: { title: \"Address\", className: 'text-start' },\n      status: { title: \"Status\", className: 'text-center' },\n      cpuModel: { title: \"CPU Model\", className: 'text-center col-fixed-mw' },\n      instanceSize: { title: \"Instance Size\", className: 'text-center col-fixed-mw' },\n      maxInstances: { title: \"Max Instances\", className: 'text-center' },\n      activeInstances: { title: \"Active Instances\", className: 'text-center' }\n    };\n    const tableValues = hostList.map(host => {\n      return {\n        key: host.address,\n        address: <div className=\"d-flex align-items-center\">\n          <CountryFlag countryCode={host.countryCode} size=\"3em\" />\n          <div className=\"ml-3\">\n              <p className=\"font-weight-bold m-0\">\n                {host.address}\n                {host.hostMessage ? (\n                  <MessageIcon className=\"host-message-icon\" fontSize=\"small\" />\n                ) : null}\n              </p>\n            <span className=\"text-black-50 d-block py-1\">\n              {\n                host.version &&\n                <span>v{host.version} | </span>\n              }\n              {\n                host.description &&\n                <span>{host.description}</span>\n              }\n            </span>\n          </div>\n        </div>,\n        status: host.active ?\n          <div className=\"h-auto py-2 badge badge-success\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Active\n          </div> :\n          <div className=\"h-auto py-2 badge badge-warning\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Inactive\n          </div>,\n        cpuModel: <CPUModel modelName={host.cpuModelName} speed={host.cpuMHz} count={host.cpuCount} />,\n        instanceSize: <InstanceSpecs cpu={host.cpuMicrosec} ram={host.ramMb} disk={host.diskMb} instanceCount={host.maxInstances} />,\n        maxInstances: host.maxInstances || 0,\n        activeInstances: host.activeInstances || 0\n      }\n    });\n\n    setHosts({\n      hosts: hostList,\n      tableColumns: tableColumns,\n      tableValues: tableValues\n    });\n  }, [evernode]);\n\n  useEffect(() => {\n    loadHosts();\n  }, [loadHosts]);\n\n  const handleRowClick = useCallback((e) => {\n    history.push(`/host/${e.key}`);\n  }, [history]);\n\n  const handleNextClick = useCallback(() => {\n    setPageQueue([...pageQueue, nextPageToken]);\n    loadHosts(nextPageToken);\n  }, [loadHosts, pageQueue, nextPageToken]);\n\n  const handlePrevClick = useCallback(() => {\n    const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n    setPageQueue(pageQueue.slice(0, pageQueue.length - 1));\n    loadHosts(prevPageToken);\n  }, [loadHosts, pageQueue]);\n\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Hosts\"\n      />\n      {(hosts && <div>\n        <CustomTable columns={hosts.tableColumns} values={hosts.tableValues} onRowClick={handleRowClick} />\n        <div>\n          {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" onClick={handlePrevClick}>Prev</Button>}\n          {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" onClick={handleNextClick}>Next</Button>}\n        </div>\n      </div>) ||\n        <Loader className=\"p-4\" />}\n    </Fragment>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');\n\nexports.default = _default;","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","placement","style","fontSize","cursor","alt","svg","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","CustomTable","columns","values","hideHeadings","onRowClick","keys","Object","Fragment","Card","CardContent","map","k","i","value","onClick","j","Hosts","history","useHistory","evernode","useEvernode","useState","hosts","setHosts","nextPageToken","setNextPageToken","pageQueue","setPageQueue","loadHosts","useCallback","pageToken","getHosts","data","hostList","tableColumns","address","status","cpuModel","instanceSize","maxInstances","activeInstances","tableValues","host","key","hostMessage","Message","version","description","active","width","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","useEffect","handleRowClick","e","handleNextClick","handlePrevClick","prevPageToken","length","slice","PageTitle","titleHeading","Button","variant","Loader","_interopRequireDefault","require","exports","_react","_default","default","createElement","d","cdnSuffix","DEFAULT_CDN_SUFFIX","cdnUrl","DEFAULT_CDN_URL","_ref$svg","flagUrl","toLowerCase","React","src","display","height","verticalAlign","emoji","toUpperCase","replace","String","fromCodePoint","char","charCodeAt","role","lineHeight"],"sourceRoot":""}