{"version":3,"file":"static/js/538.b86630b8.chunk.js","mappings":"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","sources":["common/constants.js","components/CopyBox/index.js","components/CustomTable/index.js","components/Label/LabelText.js","pages/Candidates/index.js","../node_modules/@material-ui/core/esm/Badge/Badge.js","../node_modules/@material-ui/icons/esm/DoneAll.js","../node_modules/@material-ui/icons/esm/FileCopyOutlined.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js"],"sourcesContent":["export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}\n\nexport const CandidateType = {\n    newHookCandidate: \"New Hook Candidate\",\n    pilotedModeCandidate: \"Piloted Mode Candidate\",\n    dudHostCandidate: \"Dud Host Candidate\"\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick,\n    blurTable\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className={`table table-striped  text-nowrap mb-0 ${blurTable ? 'table-blur' : 'table-hover'}`}>\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.length > 0 ? values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                )) : <tr><td colSpan={keys.length} className=\"text-center\">No data to show</td></tr>}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React from 'react'\n\nconst LabelText = ({ children, labelType }) => {\n    return (\n        <div className={`h-auto py-1 badge badge-${labelType}`} style={{ width: '4.5rem', fontSize: '0.75rem', textAlign: 'center' }}>\n            {children}\n        </div>\n    )\n}\n\nexport default LabelText","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Badge, Button } from '@material-ui/core';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport LabelText from '../../components/Label/LabelText'\nimport { CandidateType } from \"../../common/constants\"\nimport CopyBox from '../../components/CopyBox';\n\nconst PAGE_SIZE = 10;\n\nconst Candidates = () => {\n    const history = useHistory();\n    const evernode = useEvernode();\n\n    const [candidates, setCandidates] = useState(null);\n    const [nextPageToken, setNextPageToken] = useState(null);\n    const [pageQueue, setPageQueue] = useState([]);\n    const [isCandidatesLoading, setIsCandidatesLoading] = useState(false);\n\n    const updateCandidateType = useCallback(async (candidate) => {\n        const candidateType = await evernode.getCandidateType(candidate.id);\n        return { ...candidate, candidateType };\n    }, [evernode]);\n\n    const loadCandidates = useCallback(async (pageToken = null) => {\n        const data = await evernode.getCandidates(null, PAGE_SIZE, pageToken);\n        const config = await evernode.getConfigs();\n        let candidateList;\n        if (data.nextPageToken) {\n            candidateList = data.data;\n            setNextPageToken(data.nextPageToken);\n        }\n        else {\n            candidateList = data;\n            setNextPageToken(null);\n        }\n\n        const updatedCandidateList = await Promise.all(candidateList.map(updateCandidateType));\n\n        const tableColumns = {\n            candidateId: { title: \"Candidate ID\", className: 'text-start' },\n            candidateStatus: { title: \"Status\", className: 'text-center' },\n            positiveVoteCountVsVoteBaseCount: { title: \"Vote Support Ratio\", className: 'text-center col-fixed-mw' },\n            proposalFee: { title: \"Proposal Fee (EVRs)\", className: 'text-center col-fixed-mw' },\n            foundationVoteStatus: { title: \"Foundation Vote Status\", className: 'text-center' },\n            candidateType: { title: \"Candidate Type\", className: 'text-center' },\n        };\n        const tableValues = updatedCandidateList.map((candidate) => {\n\n            return {\n                key: candidate.uniqueId,\n                candidateId: <div className=\"d-flex align-items-center\">\n                    <CopyBox copyText={candidate.uniqueId} iconSize=\"16\">\n                        <p className=\"font-weight-bold m-0\">\n                            {candidate.uniqueId}\n                        </p>\n                    </CopyBox>\n                </div>,\n                candidateStatus: candidate.status === \"supported\" ?\n                    <LabelText labelType=\"success\">\n                        Supported\n                    </LabelText> : candidate.status === \"elected\" ?\n                        <LabelText labelType=\"primary\">\n                            Elected\n                        </LabelText> : candidate.status === \"purged\" ?\n                            <LabelText labelType=\"dark\">\n                                Purged\n                            </LabelText> : <LabelText labelType=\"warning\">\n                                Rejected\n                            </LabelText>,\n                positiveVoteCountVsVoteBaseCount: config.governanceInfo.voteBaseCount !== 0 ? <div>{`${candidate.positiveVoteCount} out of ${config.governanceInfo.voteBaseCount}`}</div> : <div> - </div>,\n                proposalFee: <div>{candidate.proposalFee}</div>,\n                foundationVoteStatus: candidate.foundationVoteStatus === \"supported\" ?\n                    <LabelText labelType=\"success\">\n                        Supported\n                    </LabelText> : <LabelText labelType=\"warning\">\n                        Rejected\n                    </LabelText>,\n                candidateType: <Badge badgeContent={candidate.candidateType === 1 ? CandidateType.newHookCandidate : candidate.candidateType === 2 ? CandidateType.pilotedModeCandidate : CandidateType.dudHostCandidate}></Badge>,\n            }\n        });\n\n        setCandidates({\n            candidates: updatedCandidateList,\n            tableColumns: tableColumns,\n            tableValues: tableValues\n        });\n\n        setIsCandidatesLoading(false);\n    }, [evernode, updateCandidateType]);\n\n    useEffect(() => {\n        loadCandidates();\n    }, [loadCandidates]);\n\n    const handleRowClick = useCallback((e) => {\n        if (isCandidatesLoading)\n            return;\n        history.push(`/candidate/${e.key}`);\n    }, [history, isCandidatesLoading]);\n\n    const handleNextClick = useCallback(() => {\n        setIsCandidatesLoading(true);\n        setPageQueue([...pageQueue, nextPageToken]);\n        loadCandidates(nextPageToken);\n    }, [loadCandidates, pageQueue, nextPageToken]);\n\n    const handlePrevClick = useCallback(() => {\n        setIsCandidatesLoading(true);\n        const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n        setPageQueue(pageQueue.slice(0, pageQueue.length - 1));\n        loadCandidates(prevPageToken);\n    }, [loadCandidates, pageQueue]);\n\n    return (\n        <Fragment>\n            <PageTitle\n                titleHeading=\"Candidates\"\n            />\n            {isCandidatesLoading && <Loader className={`hostsLoader \"p-4\"`} />}\n            {(candidates && <div>\n                <CustomTable columns={candidates.tableColumns} values={candidates.tableValues} blurTable={isCandidatesLoading} onRowClick={handleRowClick} />\n                <div>\n                    {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" disabled={isCandidatesLoading} onClick={handlePrevClick}>Prev</Button>}\n                    {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" disabled={isCandidatesLoading} onClick={handleNextClick}>Next</Button>}\n                </div>\n            </div>)}\n        </Fragment>\n    )\n}\n\nexport default Candidates","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginTopRightRectangle: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomRightRectangle: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginTopLeftRectangle: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomLeftRectangle: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n    anchorOriginTopRightCircle: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n    anchorOriginBottomRightCircle: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n    anchorOriginTopLeftCircle: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n    anchorOriginBottomLeftCircle: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\nvar Badge = React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[\"\".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), \"}\")], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible, {\n      dot: classes.dot\n    }[variant])\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z\"\n}), 'FileCopyOutlined');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}"],"names":["StorageKeys","hostAddress","CandidateType","newHookCandidate","pilotedModeCandidate","dudHostCandidate","CopyBox","props","copyText","iconSize","_useState","useState","_useState2","_slicedToArray","open","setOpen","_jsx","Fragment","children","_jsxs","className","Tooltip","title","Button","onClick","e","stopPropagation","navigator","clipboard","writeText","setTimeout","DoneAll","style","fontSize","color","FileCopyOutlined","CustomTable","columns","values","hideHeadings","onRowClick","blurTable","keys","Object","Card","CardContent","concat","map","k","i","length","value","cursor","j","colSpan","_ref","labelType","width","textAlign","history","useHistory","evernode","useEvernode","candidates","setCandidates","_useState3","_useState4","nextPageToken","setNextPageToken","_useState5","_useState6","pageQueue","setPageQueue","_useState7","_useState8","isCandidatesLoading","setIsCandidatesLoading","updateCandidateType","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","candidate","candidateType","wrap","_context","prev","next","getCandidateType","id","sent","abrupt","_objectSpread","stop","_x","apply","arguments","loadCandidates","_callee2","pageToken","data","config","candidateList","updatedCandidateList","tableColumns","tableValues","_args2","_context2","undefined","getCandidates","getConfigs","Promise","all","candidateId","candidateStatus","positiveVoteCountVsVoteBaseCount","proposalFee","foundationVoteStatus","key","uniqueId","status","LabelText","governanceInfo","voteBaseCount","positiveVoteCount","Badge","badgeContent","useEffect","handleRowClick","push","handleNextClick","_toConsumableArray","handlePrevClick","prevPageToken","slice","PageTitle","titleHeading","Loader","variant","disabled","React","ref","_props$anchorOrigin","anchorOrigin","vertical","horizontal","classes","_props$color","_props$component","component","ComponentProp","invisibleProp","invisible","_props$max","max","_props$overlap","overlap","_props$showZero","showZero","_props$variant","other","_objectWithoutProperties","displayValue","_extends","clsx","root","badge","capitalize","dot","withStyles","theme","position","display","verticalAlign","flexShrink","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","backgroundColor","palette","primary","main","contrastText","colorSecondary","secondary","colorError","error","RADIUS_DOT","anchorOriginTopRightRectangle","top","right","transform","transformOrigin","anchorOriginBottomRightRectangle","bottom","anchorOriginTopLeftRectangle","left","anchorOriginBottomLeftRectangle","anchorOriginTopRightCircle","anchorOriginBottomRightCircle","anchorOriginTopLeftCircle","anchorOriginBottomLeftCircle","leavingScreen","name","createSvgIcon","d","path","displayName","Component","SvgIcon","muiName"],"sourceRoot":""}