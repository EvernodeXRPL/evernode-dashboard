{"version":3,"file":"static/js/467.fb1ef784.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","components/RegularTable/index.js","components/AccordionsCollapse/index.js","components/ModalDialog/index.js","business-components/Leases/Lease/index.js","business-components/Leases/index.js","common/constants.js","business-components/EvrBalance/index.js","pages/Host/index.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  return (\n    <StyledTooltip title={countryCode} placement='right-end'>\n      <div>\n        <ReactCountryFlag\n          className=\"emojiFlag\"\n          countryCode={countryCode}\n          style={{\n            fontSize: size,\n            cursor: 'pointer'\n          }}\n          aria-label={countryCode}\n          alt={countryCode}\n          svg\n        />\n      </div>\n    </StyledTooltip>\n  );\n}\n","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\n\nexport default function RegularTable(props) {\n  const {\n    headings,\n    values,\n    highlight,\n    hideHeadings,\n    className,\n    cellClassName,\n    headerCellClassName\n  } = props;\n\n  const keys = Object.keys(headings);\n  return (\n    <Fragment>\n      <TableContainer className={`${className}`} component={Paper}>\n        <Table aria-label=\"simple table\">\n          {!hideHeadings && <TableHead>\n            <TableRow>\n              {keys.map((k, i) => {\n                return <TableCell\n                  key={i}\n                  className={((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${headerCellClassName}`}>\n                  {headings[k]}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>}\n          <TableBody>\n            {values.map(value => (\n              <TableRow key={value[keys[0]]}>\n                {keys.map((k, i) => {\n                  if (value['cellConfigs'] && i === (value['cellConfigs'].colspan) - 1)\n                    return null;\n                  let width;\n                  if (k === keys[0] && value['cellConfigs'] && value['cellConfigs'].width)\n                    width = value['cellConfigs'].width;\n                  let paddingTopBottom;\n                  if (value['cellConfigs'] && value['cellConfigs'].paddingTopBottom)\n                    paddingTopBottom = value['cellConfigs'].paddingTopBottom;\n                  return <TableCell\n                    key={i}\n                    className={(value['cellConfigs'] && value['cellConfigs'].isSubtopic) ? 'pt-3 pb-2' : (((highlight && highlight.includes(k) && 'bg-secondary text-dark font-weight-bold') || '') + ` ${cellClassName}`)}\n                    align=\"left\"\n                    style={{ width: width, paddingTop: paddingTopBottom, paddingBottom: paddingTopBottom }}\n                    colSpan={((value['cellConfigs'] && value['cellConfigs'].colspan))}>\n                    {value[k]}\n                  </TableCell>\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function AccordionsCollapse(props) {\n  const {\n    id,\n    summary,\n    panelClassName,\n    panelSummaryClassName,\n    panelDetailClassName,\n    headerTooltip\n  } = props;\n\n  const [expanded, setExpanded] = React.useState(props.expanded ? id : false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const panelSummary = <ExpansionPanelSummary\n    expandIcon={<ExpandMoreIcon className={panelSummaryClassName} />}\n    aria-controls=\"panel1bh-content\"\n    id=\"panel1bh-header\">\n    {summary}\n  </ExpansionPanelSummary>\n\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === id}\n        onChange={handleChange(id)}\n        className={panelClassName}>\n        {headerTooltip ?\n          <Tooltip title={headerTooltip}>{panelSummary}</Tooltip> :\n          panelSummary}\n        <ExpansionPanelDetails\n          className={`${panelDetailClassName} p-0`}>\n          {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\nexport default function ModalDialog(props) {\n  const { open, scroll, title, onConfirm, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\">\n      {title && <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>}\n      <DialogContent dividers={scroll === 'paper'} className=\"mb-2\">\n        {props.children}\n      </DialogContent>\n      {onConfirm && <DialogActions>\n        <Button onClick={onConfirm} variant=\"outlined\">\n          Ok\n        </Button>\n      </DialogActions>}\n    </Dialog>\n  );\n}\n","import { Button, Grid, Tooltip, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport AccordionsCollapse from '../../../components/AccordionsCollapse';\nimport RegularTable from '../../../components/RegularTable';\nimport ModalDialog from '../../../components/ModalDialog';\n\nexport default function Lease(props) {\n  const { lease } = props;\n\n  const [showTos, setShowTos] = React.useState(false);\n\n  const tableHeadings = {\n    key: 'Key',\n    value: 'Value'\n  };\n  const tableValues = [\n    {\n      key: 'Lease Amount',\n      value: <Tooltip title=\"EVRs per Moment\"><span>{lease.leaseAmount}</span></Tooltip>\n    },\n    {\n      key: 'Offer Index',\n      value: <Tooltip title=\"Lease NFT sell offer index\"><span>{lease.offerIndex}</span></Tooltip>\n    },\n    {\n      key: 'TOS',\n      value: <Tooltip title=\"Show Terms of Service\">\n        <Button className=\"tos-button\" size=\"small\" variant=\"outlined\" onClick={() => setShowTos(true)}>\n          {lease.halfTos}...\n        </Button>\n      </Tooltip>\n    }\n  ];\n\n  return (\n    <Grid item xs={12} className=\"pb-2\">\n      <AccordionsCollapse\n        id={lease.nfTokenId}\n        summary={<Typography className=\"text-truncate pl-2\" component={'span'}>\n          {lease.nfTokenId}</Typography>}\n        expanded=\"true\"\n        panelClassName=\"bg-unicorn text-light\"\n        panelSummaryClassName=\"text-light\"\n        panelDetailClassName=\"text-light overflow-auto\"\n        headerTooltip=\"NFToken Id\">\n        <Grid item xs={12}>\n          <RegularTable\n            className=\"bg-transparent rounded-0\"\n            cellClassName=\"text-light\"\n            headings={tableHeadings}\n            values={tableValues}\n            highlight={['value']}\n            hideHeadings />\n        </Grid>\n      </AccordionsCollapse>\n      <ModalDialog open={showTos} scroll=\"body\" onClose={() => setShowTos(false)}>\n        <div className=\"license\">{lease.tos}</div>\n      </ModalDialog>\n    </Grid>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport Lease from './Lease';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\n\nexport default function Leases(props) {\n  const { address } = props;\n\n  const [leases, setLeases] = React.useState(null);\n\n  const evernode = useEvernode();\n\n  useEffect(() => {\n    const fetchLeases = async () => {\n      setLeases(null);\n      const tos = await evernode.getTos();\n      const res = await evernode.getLeases(address);\n      const leaseData = res.map(l => {\n        const uriInfo = evernode.decodeLeaseUri(l.uri)\n        return {\n          ...l,\n          ...uriInfo,\n          tos: tos\n        }\n      });\n      setLeases(leaseData);\n    }\n\n    fetchLeases();\n  }, [address, evernode]);\n\n  return (\n    <Fragment>\n      {(leases && (leases.length ? <Grid container>\n        {leases.map((lease, index) => {\n          return <Lease key={index} lease={lease} />\n        })}\n      </Grid> : <span>There're no available leases!</span>)) || <Loader />}\n    </Fragment>\n  );\n}\n","export const StorageKeys = {\n    hostAddress: 'hostAddress'\n}","import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Tooltip\n} from '@material-ui/core';\n\nimport Loader from '../../components/Loader';\n\nexport default function EvrBalance(props) {\n  const { balance } = props;\n\n  return (\n    <Card className=\"mt-1 bg-unicorn border-0 text-light\">\n      {((balance || balance === 0) && <Tooltip title=\"Total EVR balance\">\n        <CardContent className=\"pt-1 pb-1 text-center wallet-balance\">\n          <span className=\"font-weight-bold amount\">\n            {balance}\n          </span>\n          <span className=\"font-weight-normal ml-1 evr\">\n            EVR\n          </span>\n        </CardContent></Tooltip>) || <Loader className=\"mt-1 p-2\" size=\"1.5rem\" />}\n    </Card>\n  );\n}\n","import React, { Fragment, useCallback, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport PageTitle from '../../layout-components/PageTitle';\nimport RegularTable from '../../components/RegularTable';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  TextField,\n  Button,\n  Hidden\n} from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Leases from '../../business-components/Leases';\n\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport { StorageKeys } from '../../common/constants';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport EvrBalance from '../../business-components/EvrBalance';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport ModalDialog from '../../components/ModalDialog';\n\nconst useStyles = makeStyles({\n  root: {\n    // input label when focused\n    \"& label.Mui-focused\": {\n      color: 'rgba(0,0,0,0.54)'\n    },\n    \"& label.Mui-error\": {\n      color: 'red'\n    },\n    // focused color for input with variant='standard'\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: 'rgba(0,0,0,0.87)'\n    },\n    \"& .MuiInput-underline.Mui-error:after\": {\n      borderBottomColor: '#f83245'\n    },\n    \"& label.MuiInputLabel-shrink\": {\n      transform: 'translate(0, 1.5px) scale(0.95)',\n      transformOrigin: 'top left'\n    }\n  }\n});\n\nexport default function Host(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const evernode = useEvernode();\n\n  const selfAddress = localStorage.getItem(StorageKeys.hostAddress);\n  const pathAddress = props.match.params.address;\n\n  const [address, setAddress] = React.useState(pathAddress || selfAddress);\n  const [inputAddress, setInputAddress] = React.useState(null);\n  const [info, setInfo] = React.useState(null);\n  const [showChangeAddress, setShowChangeAddress] = React.useState(false);\n\n  const inputAddressValid = useCallback(() => {\n    return /^r[a-zA-Z0-9]{24,34}$/g.test(inputAddress);\n  }, [inputAddress])\n\n  const handleChangeAddress = useCallback(() => {\n    if (inputAddress && inputAddressValid()) {\n      localStorage.setItem(StorageKeys.hostAddress, inputAddress);\n      setAddress(inputAddress);\n      setInputAddress(null);\n      setShowChangeAddress(false);\n    }\n  }, [inputAddress, inputAddressValid]);\n\n  const handleChangeAddressClose = useCallback(() => {\n    setShowChangeAddress(false);\n    setInputAddress(null);\n    // If the address change modal is closed without changing the address,\n    // Redirect to the home page.\n    if (!address)\n      history.push('/')\n  }, [address, history]);\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      setInfo(null);\n      const hosts = await evernode.getHosts({ address: address });\n      const config = await evernode.getConfigs();\n      const hostInfo = (hosts && hosts.length) ? hosts[0] : null;\n      const tableHeadings = {\n        key: 'Key',\n        value: 'Value'\n      }\n      let tableValues = hostInfo ? [\n        {\n          key: 'Registration Token Id',\n          value: <Tooltip title=\"Registration NFToken Id\"><span>{hostInfo.nfTokenId}</span></Tooltip>\n        },\n        {\n          key: 'Instances',\n          value: <Tooltip title=\"Active instances out of Maximum instances\">\n            <span>{hostInfo.activeInstances || 0} out of {hostInfo.maxInstances || 0}</span>\n          </Tooltip>\n        },\n        {\n          key: 'CPU Model',\n          value: <CPUModel modelName={hostInfo.cpuModelName} speed={hostInfo.cpuMHz} count={hostInfo.cpuCount} showTooltip />\n        },\n        {\n          key: 'Instance Size',\n          value: <InstanceSpecs cpu={hostInfo.cpuMicrosec} ram={hostInfo.ramMb} disk={hostInfo.diskMb} instanceCount={hostInfo.maxInstances} showTooltip />\n        },\n        {\n          key: 'Last Heartbeat Index',\n          value: <Tooltip title={`${config.momentBaseInfo.momentType === 'ledger' ? 'XRP Ledger' : 'Timestamp'} at which the last heartbeat was received`}><span>{hostInfo.lastHeartbeatIndex}</span></Tooltip>\n        },\n        {\n          key: 'Registered on XRP Ledger',\n          value: <Tooltip title=\"XRP Ledger at which the host registered\"><span>{hostInfo.registrationLedger}</span></Tooltip>\n        },\n        {\n          key: 'Registration Fee',\n          value: <Tooltip title=\"Registration fee (in EVRs) spent by the host\"><span>{hostInfo.registrationFee}</span></Tooltip>\n        },\n        {\n          key: 'Version',\n          value: <Tooltip title=\"Host's Sashimono version\"><span>{hostInfo.version}</span></Tooltip>\n        }\n      ] : [];\n      if (hostInfo?.registrationTimestamp)\n        tableValues.push(\n          {\n            key: 'Registered on Timestamp',\n            value: <Tooltip title=\"Timestamp at which the host registered\"><span>{hostInfo.registrationTimestamp}</span></Tooltip>\n          });\n      const evrBalance = await evernode.getEVRBalance(address);\n      setInfo({\n        evrBalance: evrBalance,\n        hostInfo: hostInfo,\n        tableHeadings: tableHeadings,\n        tableValues: tableValues\n      });\n    }\n\n    // If the path address param is empty this is My Host page and no address is set in local storage.\n    if (!address)\n      setShowChangeAddress(true);\n    else if (pathAddress === selfAddress)\n      history.push('/host');\n    else\n      fetchInfo();\n  }, [evernode, history, address, pathAddress, selfAddress]);\n\n  return (\n    <>{address &&\n      <Fragment>\n        <PageTitle\n          responsive={true}\n          titleHeading={\n            <div className=\"d-flex align-items-center display-7\">\n              <Hidden mdDown>\n                <span className=\"mr-2\">\n                  {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"1.8em\" />}\n                </span>\n              </Hidden>\n              {address}\n              {address === selfAddress &&\n                <Tooltip title=\"Change address\">\n                  <EditIcon className=\"ml-1 edit-btn\" onClick={() => setShowChangeAddress(true)} />\n                </Tooltip>}\n              <span>{info?.hostInfo &&\n                <Tooltip title={info.hostInfo.active ? 'Active' : 'Inactive'}>\n                  <div className={`ml - 1 rounded - circle ${info.hostInfo.active ? 'online' : 'offline'}`}></div>\n                </Tooltip>}</span>\n            </div>\n          }\n          titleDescription={info ? (info?.hostInfo && <Typography type=\"p\">{info.hostInfo.description}</Typography>) :\n            <Loader className=\"p-0\" size=\"1rem\" />}>\n          <Hidden mdUp>\n            <span>\n              {info?.hostInfo && <CountryFlag countryCode={info.hostInfo.countryCode} size=\"2.5em\" />}\n            </span>\n          </Hidden>\n          <EvrBalance balance={+(+info?.evrBalance).toFixed(3)} />\n        </PageTitle>\n        <Grid container spacing={4}>\n          {info && info.hostInfo && info.hostInfo.hostMessage ? (\n            <Grid item xs={12}>\n              <Card\n                style={{ border: \"none\", boxShadow: \"none\" }}\n                className=\"mb-4 bg-transparent\"\n              >\n                <CardContent className=\"p-0\">\n                  <div className=\"p-3 border rounded host-message mb-0\">\n                    {(info &&\n                      (info.hostInfo.hostMessage\n                        ? info.hostInfo.hostMessage\n                        : \"There is no host message available!\")) || (\n                        <Loader className=\"p-4\" />\n                      )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Registration Info\n                </h5>\n                {(info &&\n                  (info.hostInfo ? (\n                    <RegularTable\n                      headings={info.tableHeadings}\n                      values={info.tableValues}\n                      highlight={[\"key\"]}\n                      hideHeadings\n                    />\n                  ) : (\n                    <span>Host is not Registered!</span>\n                  ))) || <Loader className=\"p-4\" />}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              className=\"mb-4 bg-transparent\"\n            >\n              <CardContent className=\"p-0\">\n                <h5 className=\"card-title font-weight-bold font-size-md\">\n                  Available Leases\n                </h5>\n                {address && <Leases address={address} />}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Fragment >}\n      {address === selfAddress && <ModalDialog open={showChangeAddress} scroll=\"body\" onClose={handleChangeAddressClose}>\n        <div>\n          <TextField autoFocus error={!!inputAddress && !inputAddressValid()} classes={classes} className=\"address-input\" variant=\"standard\" label=\"Enter the host XRP address\" multiline value={inputAddress || ''} onChange={(e) => setInputAddress(e.target.value)} />\n        </div>\n        <div>\n          <Button onClick={handleChangeAddress} variant=\"outlined\" disabled={!inputAddress || !inputAddressValid()} className=\"pull-right mt-3\">OK</Button>\n        </div>\n      </ModalDialog>}</>\n  );\n}\n"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","placement","style","fontSize","cursor","alt","svg","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","RegularTable","headings","values","highlight","hideHeadings","cellClassName","headerCellClassName","keys","Object","Fragment","component","Paper","map","k","i","includes","value","colspan","width","paddingTopBottom","isSubtopic","align","paddingTop","paddingBottom","colSpan","AccordionsCollapse","panel","id","summary","panelClassName","panelSummaryClassName","panelDetailClassName","headerTooltip","React","expanded","setExpanded","panelSummary","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelDetails","children","ModalDialog","open","scroll","onConfirm","onClose","Dialog","DialogTitle","DialogContent","dividers","DialogActions","Button","onClick","variant","Lease","lease","showTos","setShowTos","tableValues","key","leaseAmount","offerIndex","halfTos","Grid","item","xs","nfTokenId","Typography","tos","Leases","address","leases","setLeases","evernode","useEvernode","useEffect","fetchLeases","getTos","getLeases","res","leaseData","l","uriInfo","decodeLeaseUri","uri","length","container","index","Loader","StorageKeys","EvrBalance","balance","Card","CardContent","useStyles","makeStyles","root","color","borderBottomColor","transform","transformOrigin","Host","classes","history","useHistory","selfAddress","localStorage","getItem","pathAddress","match","params","setAddress","inputAddress","setInputAddress","info","setInfo","showChangeAddress","setShowChangeAddress","inputAddressValid","useCallback","test","handleChangeAddress","setItem","handleChangeAddressClose","fetchInfo","getHosts","hosts","getConfigs","config","hostInfo","tableHeadings","activeInstances","maxInstances","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","momentBaseInfo","momentType","lastHeartbeatIndex","registrationLedger","registrationFee","version","registrationTimestamp","getEVRBalance","evrBalance","PageTitle","responsive","titleHeading","Hidden","mdDown","Edit","active","titleDescription","type","description","mdUp","toFixed","spacing","hostMessage","border","boxShadow","md","TextField","autoFocus","error","label","multiline","e","target","disabled"],"sourceRoot":""}