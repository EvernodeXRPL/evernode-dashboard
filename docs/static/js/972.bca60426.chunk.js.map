{"version":3,"file":"static/js/972.bca60426.chunk.js","mappings":"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","sources":["business-components/CPUModel/index.js","business-components/CountryFlag/index.js","business-components/InstanceSpecs/index.js","components/CopyBox/index.js","components/CustomTable/index.js","pages/Hosts/index.js","../node_modules/@material-ui/icons/Message.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nexport default function CPUModel(props) {\n  const { modelName, speed, count, showTooltip } = props;\n\n  const cpuInfo = [];\n  if (modelName)\n    cpuInfo.push(modelName);\n  if (speed)\n    cpuInfo.push(`${speed} MHz`);\n  if (count)\n    cpuInfo.push(`${count} cores`);\n\n  const text = cpuInfo.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Host's CPU specifications\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport ReactCountryFlag from 'react-country-flag';\nimport ISO3166_1 from \"iso-3166-1\";\n\nexport default function CountryFlag(props) {\n  const { countryCode, size } = props;\n\n  const isValidCountryCode = (code) => {\n    return ISO3166_1.whereAlpha2(code) !== undefined;\n  };\n\n  // Overriding tooltip styles to keep tooltip near the flag.\n  const StyledTooltip = withStyles({\n    tooltipPlacementRight: {\n      marginLeft: \"0\",\n    },\n  })(Tooltip);\n\n  if (isValidCountryCode(countryCode)) {\n    return (\n      <StyledTooltip title={countryCode} placement='right-end'>\n        <div>\n          <ReactCountryFlag\n            className=\"emojiFlag\"\n            countryCode={countryCode}\n            style={{\n              fontSize: size,\n              cursor: 'pointer'\n            }}\n            aria-label={countryCode}\n            alt={countryCode}\n            svg\n          />\n        </div>\n      </StyledTooltip>\n    );\n  } else {\n    return (\n      <span style={{fontSize: \"24px\", width: \"42px\", textAlign: \"center\"}}>{countryCode}</span>\n    )\n  }\n}","import React from 'react';\n\nimport { Tooltip, Typography } from '@material-ui/core';\n\nfunction round(n) {\n  return Math.round(n * 100) / 100;\n}\n\nexport default function InstanceSpecs(props) {\n  const { cpu, ram, disk, instanceCount, showTooltip } = props;\n\n  const specs = [];\n  if (instanceCount) {\n    if (cpu)\n      specs.push(`${round(cpu / 10000 / instanceCount)}% CPU`);\n    if (ram)\n      specs.push(`${round(ram / 1000 / instanceCount)}GB RAM`);\n    if (disk)\n      specs.push(`${round(disk / 1000 / instanceCount)}GB Disk`);\n  }\n\n  const text = specs.join(', ');\n  const content = <Typography className=\"text-wrap\">{text}</Typography>;\n\n  return (\n    text ? (showTooltip ? <Tooltip title=\"Resource allocation for a smart contract instance\">\n      {content}\n    </Tooltip> : content) : '-'\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\n\nimport { FileCopyOutlined, DoneAll } from \"@material-ui/icons\";\n\nexport default function CopyBox(props) {\n  const { copyText, iconSize } = props;\n  const [open, setOpen] = useState(false);\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setOpen(true);\n    navigator.clipboard.writeText(copyText);\n    setTimeout(() => { setOpen(false); }, 2000);\n  };\n  return (\n    <Fragment>\n      <div className=\"copy-box\">\n        <div>\n          {props.children}\n        </div>\n        <Tooltip title={open? \"Copied\":\"Copy to clipboard\"} className=\"ml-1\">\n          <Button onClick={handleClick} className=\"copy-button\">\n            {open ? <DoneAll className=\"m-1\" style={{ fontSize: iconSize || 20, color: '#2b9e19' }} /> : <FileCopyOutlined className=\"m-1\" style={{ fontSize: iconSize || 20 }} />}\n\n          </Button>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nexport default function CustomTable(props) {\n  const {\n    columns,\n    values,\n    hideHeadings,\n    onRowClick,\n    blurTable\n  } = props;\n\n  const keys = Object.keys(columns);\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <CardContent className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className={`table table-striped  text-nowrap mb-0 ${blurTable ? 'table-blur' : 'table-hover'}`}>\n              {!hideHeadings && <thead className=\"thead-light\">\n                <tr>\n                  {keys.map((k, i) => {\n                    return <th key={i} className={columns[k].className}>{columns[k].title}</th>\n                  })}\n                </tr>\n              </thead>}\n              <tbody>\n                {values.length > 0 ? values.map((value, i) => (\n                  <tr key={i} onClick={() => onRowClick(value)} style={{ cursor: 'pointer' }}>\n                    {keys.map((k, j) => {\n                      return <td key={j} className={columns[k].className}>\n                        {value[k]}\n                      </td>\n                    })}\n                  </tr>\n                )) : <tr><td colSpan={keys.length} className=\"text-center\">No data to show</td></tr>}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\nimport PageTitle from '../../layout-components/PageTitle';\nimport CustomTable from '../../components/CustomTable';\nimport { useEvernode } from '../../services/Evernode';\nimport Loader from '../../components/Loader';\nimport CountryFlag from '../../business-components/CountryFlag';\nimport CPUModel from '../../business-components/CPUModel';\nimport InstanceSpecs from '../../business-components/InstanceSpecs';\nimport CopyBox from '../../components/CopyBox';\n\nconst PAGE_SIZE = 10;\n\nexport default function Hosts() {\n  const history = useHistory();\n  const evernode = useEvernode();\n  const {nextPageToken, updateNextPageToken, pageQueue, updatePageQueue} = useEvernode();\n\n  const [hosts, setHosts] = useState(null);\n  const [isHostsLoading, setIsHostsLoading] = useState(false);\n\n  const loadHosts = useCallback(async (pageToken = null) => {\n    const data = await evernode.getHosts(null, PAGE_SIZE, pageToken);\n    let hostList;\n    if (data.nextPageToken) {\n      hostList = data.data;\n      updateNextPageToken(data.nextPageToken);\n    }\n    else {\n      hostList = data;\n      updateNextPageToken(null);\n    }\n\n    const tableColumns = {\n      address: { title: \"Address\", className: 'text-start' },\n      status: { title: \"Status\", className: 'text-center' },\n      cpuModel: { title: \"CPU Model\", className: 'text-center col-fixed-mw' },\n      instanceSize: { title: \"Instance Size\", className: 'text-center col-fixed-mw' },\n      maxInstances: { title: \"Max Instances\", className: 'text-center' },\n      activeInstances: { title: \"Active Instances\", className: 'text-center' }\n    };\n    const tableValues = hostList.map(host => {\n      return {\n        key: host.address,\n        address: <div className=\"d-flex align-items-center\">\n          <CountryFlag countryCode={host.countryCode} size=\"3em\" />\n          <div className=\"ml-3\">\n            <CopyBox copyText={host.address} iconSize=\"16\">\n              <p className=\"font-weight-bold m-0\">\n                {host.address}\n                {host.hostMessage ? (\n                  <MessageIcon className=\"host-message-icon\" fontSize=\"small\" />\n                ) : null}\n              </p>\n            </CopyBox>\n            <span className=\"text-black-50 d-block py-1\">\n              {\n                host.version &&\n                <span className=\"text-span\">v{host.version} | </span>\n              }\n              {\n                host.domain &&\n                <span>{host.domain}</span>\n              }\n            </span>\n          </div>\n        </div>,\n        status: host.active ?\n          <div className=\"h-auto py-2 badge badge-success\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Active\n          </div> :\n          <div className=\"h-auto py-2 badge badge-warning\" style={{ width: '4.25rem', fontSize: '0.75rem' }}>\n            Inactive\n          </div>,\n        cpuModel: <CPUModel modelName={host.cpuModelName} speed={host.cpuMHz} count={host.cpuCount} />,\n        instanceSize: <InstanceSpecs cpu={host.cpuMicrosec} ram={host.ramMb} disk={host.diskMb} instanceCount={host.maxInstances} />,\n        maxInstances: host.maxInstances || 0,\n        activeInstances: host.activeInstances || 0\n      }\n    });\n\n    setHosts({\n      hosts: hostList,\n      tableColumns: tableColumns,\n      tableValues: tableValues\n    });\n\n    setIsHostsLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (pageQueue.length > 0)\n      loadHosts(pageQueue[pageQueue.length - 1]);\n    else\n      loadHosts();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts]);\n\n  const handleRowClick = useCallback((e) => {\n    if (isHostsLoading)\n      return;\n    history.push(`/host/${e.key}`);\n  }, [history, isHostsLoading]);\n\n  const handleNextClick = useCallback(() => {\n    setIsHostsLoading(true);\n    updatePageQueue([...pageQueue,nextPageToken]);\n    loadHosts(nextPageToken);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts, pageQueue, nextPageToken]);\n\n  const handlePrevClick = useCallback(() => {\n    setIsHostsLoading(true);\n    const prevPageToken = pageQueue.length > 1 ? pageQueue[pageQueue.length - 2] : null;\n    updatePageQueue(pageQueue.slice(0, pageQueue.length - 1));\n    loadHosts(prevPageToken);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadHosts, pageQueue]);\n\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Hosts\"\n      />\n      {isHostsLoading && <Loader className={`hostsLoader \"p-4\"`} />}\n      {(hosts && <div>\n        <CustomTable columns={hosts.tableColumns} values={hosts.tableValues} blurTable={isHostsLoading} onRowClick={handleRowClick} />\n        <div>\n          {pageQueue.length > 0 && <Button className=\"pull-left\" variant=\"contained\" disabled={isHostsLoading} onClick={handlePrevClick}>Prev</Button>}\n          {nextPageToken && <Button className=\"pull-right\" variant=\"contained\" disabled={isHostsLoading} onClick={handleNextClick}>Next</Button>}\n        </div>\n      </div>)}\n    </Fragment>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');\n\nexports.default = _default;"],"names":["CPUModel","props","modelName","speed","count","showTooltip","cpuInfo","push","text","join","content","className","title","CountryFlag","code","countryCode","size","StyledTooltip","withStyles","tooltipPlacementRight","marginLeft","Tooltip","undefined","ISO3166_1","placement","style","fontSize","cursor","alt","svg","width","textAlign","round","n","Math","InstanceSpecs","cpu","ram","disk","instanceCount","specs","CopyBox","copyText","iconSize","useState","open","setOpen","Fragment","children","onClick","e","stopPropagation","navigator","clipboard","writeText","setTimeout","color","CustomTable","columns","values","hideHeadings","onRowClick","blurTable","keys","Object","map","k","i","length","value","j","colSpan","Hosts","history","useHistory","evernode","useEvernode","nextPageToken","updateNextPageToken","pageQueue","updatePageQueue","hosts","setHosts","isHostsLoading","setIsHostsLoading","loadHosts","useCallback","pageToken","getHosts","data","hostList","tableColumns","address","status","cpuModel","instanceSize","maxInstances","activeInstances","tableValues","host","key","hostMessage","version","domain","active","cpuModelName","cpuMHz","cpuCount","cpuMicrosec","ramMb","diskMb","useEffect","handleRowClick","handleNextClick","handlePrevClick","prevPageToken","slice","titleHeading","variant","disabled","_interopRequireDefault","require","exports","_react","_default","default","createElement","d"],"sourceRoot":""}